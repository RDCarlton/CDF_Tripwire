{"version":3,"sources":["dialogs/signature-edit-dialog.js","activity-graph.js","chain-map.js","ckeditor.js","comments.js","global-hooks.js","dialogs/admin-dialog.js","dialogs/options-dialog.js","dialogs/signature-add-dialog.js","dialogs/signature-dialog.js"],"names":["openSigEdit","e","preventDefault","$","this","closest","attr","hasClass","dialog","parent","effect","addClass","resizable","minHeight","dialogClass","buttons","Save","submit","Cancel","open","id","data","sig","tripwire","client","signatures","activity","editSig","refresh","checked","button","life","mass","systemID","viewingSystemID","val","signatureID","selectmenu","trigger","type","systems","connectionID","name","connection","sig2ID","sig2Type","system","lifeLength","EVE","systemName","select","close","ui","removeClass","ValidationTooltips","create","click","width","inlinecomplete","source","aSigSystems","maxSize","delay","whList","blur","value","focus","graph","options","view","span","columns","label","role","calc","d","r","getValue","sourceColumn","column","title","getData","cache","json","ajax","url","time","dataType","async","responseJSON","rows","reverse","google","visualization","DataView","DataTable","setColumns","selectHandler","selections","getSelection","row","c","animation","duration","draw","init","AreaChart","document","getElementById","isStacked","backgroundColor","hAxis","textStyle","color","fontName","fontSize","showTextEvery","vAxis","viewWindowMode","viewWindow","min","maxValue","gridlineColor","pointSize","lineWidth","chartArea","left","top","height","legend","position","easing","tooltip","showColorCode","annotations","style","domain","focusTarget","events","addListener","redraw","setOnLoadCallback","chain","map","drawing","newView","x","shipJumps","podKills","shipKills","npcKills","$node","find","jBox","y","occupied","html","count","OccupiedToolTips","attach","flares","flare","index","next","grid","gridlines","length","lines","mode","nodeIndex","Math","ceil","cellIndex","$connector","prev","children","$parent","nodeCol","connectorCell","each","colSpan","parentIndex","newparentIndex","i","checkSystem","replace","node","v","$connecte","col","me","tempCol","breaker","skip","nodes","topLevel","systemType","class","security","effectClass","chainNode","tabs","active","f","findLinks","parentID","parseInt","childID","chainList","chainData","link","inArray","usedLinks","typeBM","type2BM","classBM","class2BM","nth","nth2","child","chainLinks","push","jumps","guidance","findShortestPath","shortest","calcNode","favorites","regionID","cols","frigTypes","connections","toString","split","hide","nodeClass","nodeSecurity","wormholes","leadsTo","sigFormat","Array","extend","rawMap","evescout","masks","mask","Object","sort","collapsed","collapse","WormholeTypeToolTips","last_modified","getCollapsedNodes","save","OrgChart","allowHtml","allowCollapse","size","CKConfig","skin","allowedContent","extraPlugins","enterMode","CKEDITOR","ENTER_BR","removeDialogTabs","autoGrow_onStartup","autoGrow_minHeight","toolbar_minToolbar","items","toolbar_maxToolbar","toolbar","smallToolbar","maximizedToolbar","fontSize_style","element","styles","font-size","overrides","attributes","on","cke","editor","keyCode","domEvent","altKey","s","selected_ranges","getRanges","startContainer","parents","getParents","getFirst","getNext","selectElement","selectRanges","ev","definition","getContents","get","removeAllRanges","$comment","show","editComment","$this","commentID","comment","instances","done","result","modifiedBy","modifiedDate","createdBy","createdDate","Tooltips","destroy","removeAttr","remove","my","at","of","Delete","always","clone","before","window","location","href","indexOf","Notify","systemChange","undo","redo","keydown","metaKey","ctrlKey","activeElement","is","refreshWindow","$ajax","abort","$total","results","ids","l","$row","$col","numFormat","append","refreshTimer","setTimeout","autoOpen","modal","Close","$menuItem","clearTimeout","tablesorter","sortReset","widgets","sortList","parentElement","JSON","stringify","maskChange","typeFormat","classFormat","parse","pasteLife","background","apply","countdown","empty","list","Reset","reset","stat","text","response","owner","admin","img","optional","filter","prop","accordion","heightStyle","collapsible","serialize","error","direction","Add","css","characterName","corporationName","allianceName","Remove","send","Create","corporationID","characterID","trim","target","setContent","toLowerCase","toUpperCase","form","serializeObject","whType","sigClass","viewingSystem","connectionName","class2","request","add","resultSet","action","sessionStorage","setItem","aSigWormholes","item","splice","durationPicker","test","substring","not","change","slideUp","slideDown","valid","isNaN","console","log","method","side","whLife","update"],"mappings":"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","file":"app.min.js","sourcesContent":["function openSigEdit(e) {\n\te.preventDefault();\n\n\tif ($(this).closest(\"tr\").attr(\"disabled\")) {\n\t\treturn false;\n\t} else if ($(\"#dialog-deleteSig\").hasClass(\"ui-dialog-content\") && $(\"#dialog-deleteSig\").dialog(\"isOpen\")) {\n\t\t$(\"#dialog-deleteSig\").parent().effect(\"shake\", 300);\n\t\treturn false;\n\t} else if ($(\"#dialog-sigEdit\").hasClass(\"ui-dialog-content\") && $(\"#dialog-sigEdit\").dialog(\"isOpen\")) {\n\t\t$(\"#dialog-sigEdit\").parent().effect(\"shake\", 300);\n\t\treturn false;\n\t}\n\n\t$(this).closest(\"tr\").addClass(\"selected\");\n\n\t// check if dialog is open\n\tif (!$(\"#dialog-sigEdit\").hasClass(\"ui-dialog-content\")) {\n\t\t$(\"#dialog-sigEdit\").dialog({\n\t\t\tresizable: false,\n\t\t\tminHeight: 150,\n\t\t\tdialogClass: \"ui-dialog-shadow dialog-noeffect\",\n\t\t\tbuttons: {\n\t\t\t\tSave: function() {\n\t\t\t\t\t$(\"#sigEditForm\").submit();\n\t\t\t\t},\n\t\t\t\tCancel: function() {\n\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t}\n\t\t\t},\n\t\t\topen: function() {\n\t\t\t\tvar id = $(\"#sigTable tr.selected\").data(\"id\");\n\t\t\t\t$(\"#sigEditForm\").data(\"id\", id);\n\t\t\t\tvar sig = tripwire.client.signatures[id];\n\t\t\t\ttripwire.activity.editSig = id;\n\t\t\t\ttripwire.refresh('refresh');\n\n\t\t\t\t$(\"#autoEdit\")[0].checked = false;\n\t\t\t\t$(\"#autoEdit\").button(\"refresh\");\n\n\t\t\t\t// First check if it is a WH\n\t\t\t\tif (sig.life || sig.mass) {\n\t\t\t\t\t// Check which side we are editing\n\t\t\t\t\tif (sig.systemID == viewingSystemID) {\n\t\t\t\t\t\t$(\"#dialog-sigEdit #sigID\").val(sig.signatureID);\n\t\t\t\t\t\t$(\"#dialog-sigEdit #sigType\").val(\"Wormhole\").selectmenu(\"refresh\").trigger(\"selectmenuchange\");\n\t\t\t\t\t\t$(\"#dialog-sigEdit #whType\").val(sig.type);\n\t\t\t\t\t\t$(\"#dialog-sigEdit #connection\").val(tripwire.systems[sig.connectionID] ? tripwire.systems[sig.connectionID].name : sig.connection);\n\t\t\t\t\t\t$(\"#dialog-sigEdit #whLife\").val(sig.life).selectmenu(\"refresh\");\n\t\t\t\t\t\t$(\"#dialog-sigEdit #whMass\").val(sig.mass).selectmenu(\"refresh\");\n\n\t\t\t\t\t\t$(\"#dialog-sigEdit [name=side]\").val(\"parent\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$(\"#dialog-sigEdit #sigID\").val(sig.sig2ID);\n\t\t\t\t\t\t$(\"#dialog-sigEdit #sigType\").val(\"Wormhole\").selectmenu(\"refresh\").trigger(\"selectmenuchange\");\n\t\t\t\t\t\t$(\"#dialog-sigEdit #whType\").val(sig.sig2Type);\n\t\t\t\t\t\t$(\"#dialog-sigEdit #connection\").val(tripwire.systems[sig.systemID] ? tripwire.systems[sig.systemID].name : sig.system);\n\t\t\t\t\t\t$(\"#dialog-sigEdit #whLife\").val(sig.life).selectmenu(\"refresh\");\n\t\t\t\t\t\t$(\"#dialog-sigEdit #whMass\").val(sig.mass).selectmenu(\"refresh\");\n\n\t\t\t\t\t\t$(\"#dialog-sigEdit [name=side]\").val(\"child\");\n\t\t\t\t\t}\n\n\t\t\t\t\t$(\"#dialog-sigEdit #sigLife\").val(72).selectmenu(\"refresh\");\n\t\t\t\t\t$(\"#dialog-sigEdit #sigName\").val(\"\");\n\t\t\t\t} else {\n\t\t\t\t\t// Its not a WH\n\t\t\t\t\t$(\"#dialog-sigEdit #sigID\").val(sig.signatureID);//.attr(\"name\", \"signatureID\");\n\t\t\t\t\t$(\"#dialog-sigEdit #sigType\").val(sig.type == \"???\" ? \"Sites\" : sig.type).selectmenu(\"refresh\").trigger(\"selectmenuchange\");\n\t\t\t\t\t$(\"#dialog-sigEdit #sigLife\").val(sig.lifeLength).selectmenu(\"refresh\");\n\t\t\t\t\t$(\"#dialog-sigEdit #sigName\").val(sig.name);\n\n\t\t\t\t\t$(\"#dialog-sigEdit #whType\").val(\"\");\n\t\t\t\t\t$(\"#dialog-sigEdit #connection\").val(\"\");\n\t\t\t\t\t$(\"#dialog-sigEdit #whLife\").val(\"Stable\").selectmenu(\"refresh\");\n\t\t\t\t\t$(\"#dialog-sigEdit #whMass\").val(\"Stable\").selectmenu(\"refresh\");\n\n\t\t\t\t\t$(\"#dialog-sigEdit [name=side]\").val(\"parent\");\n\t\t\t\t}\n\n\t\t\t\tif (tripwire.client.EVE && tripwire.client.EVE.systemName) {\n\t\t\t\t\t$(\"#autoEdit\").button(\"enable\");\n\t\t\t\t} else {\n\t\t\t\t\t$(\"#autoEdit\").button(\"disable\");\n\t\t\t\t}\n\n\t\t\t\t// Auto select ID field\n\t\t\t\t$(\"#dialog-sigEdit #sigID\").select();\n\t\t\t},\n\t\t\tclose: function(e, ui) {\n\t\t\t\tdelete tripwire.activity.editSig;\n\t\t\t\ttripwire.refresh('refresh');\n\n\t\t\t\t$(this).data(\"id\", \"\");\n\n\t\t\t\t$(\"th.critical\").removeClass(\"critical\");\n\t\t\t\tValidationTooltips.close();\n\n\t\t\t\t$(\"#sigTable tr.selected\").removeClass(\"selected\");\n\t\t\t},\n\t\t\tcreate: function() {\n\t\t\t\t$(\"#autoEdit\").button().click(function() {\n\t\t\t\t\t$(\"#sigEditForm #connection\").val(tripwire.client.EVE.systemName);\n\t\t\t\t});\n\n\t\t\t\t$(\"#sigEditForm #sigType, #sigEditForm #sigLife\").selectmenu({width: 100});\n\t\t\t\t$(\"#sigEditForm #whLife, #sigEditForm #whMass\").selectmenu({width: 80});\n\t\t\t\t$(\"#sigEditForm .sigSystemsAutocomplete\").inlinecomplete({source: tripwire.aSigSystems, maxSize: 10, delay: 0});\n\t\t\t\t$(\"#sigEditForm .typesAutocomplete\").inlinecomplete({source: whList, maxSize: 10, delay: 0});\n\n\t\t\t\t$(\"#sigEditForm #whType, #sigEditForm #sigID\").blur(function(e) {\n\t\t\t\t\tif (this.value == \"\") {\n\t\t\t\t\t\tthis.value = \"???\";\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$(\"#sigEditForm #whType, #sigEditForm #sigID\").focus(function(e) {\n\t\t\t\t\t$(this).select();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t} else if (!$(\"#dialog-sigEdit\").dialog(\"isOpen\")) {\n\t\t$(\"#dialog-sigEdit\").dialog(\"open\");\n\t}\n}\n\n$(\"#sigTable\").on(\"click\", \".sigEdit\", openSigEdit);\n$(\"#sigTable tbody\").on(\"dblclick\", \"tr\", openSigEdit);\n\n$(\"#sigEditForm\").submit(function(e) {\n\te.preventDefault();\n\n\t// Trim ending whitespace\n\t$(\"#sigEditForm #connection\").val($(\"#sigEditForm #connection\").val().trim());\n\n\t$(\"th.critical\").removeClass(\"critical\");\n\tValidationTooltips.close();\n\n\t// Check for !empty and length == 3\n\tif ($(\"#sigEditForm #sigID\").val() == '' || $(\"#sigEditForm #sigID\").val().length !== 3) {\n\t\t$(\"#sigEditForm #sigID\").focus().parent().prev(\"th\").addClass(\"critical\");\n\t\tValidationTooltips.open({target: $(\"#sigEditForm #sigID\")}).setContent(\"Must be 3 letters in length!\");\n\t\treturn;\n\t}\n\n\t// Check for letters only\n\tif ($(\"#sigEditForm #sigID\").val() !== \"???\") {\n\t\tvar i = $(\"#sigEditForm #sigID\").val().length;\n\t\twhile (i--) {\n\t\t\tif ($(\"#sigEditForm #sigID\").val()[i].toLowerCase() === $(\"#sigEditForm #sigID\").val()[i].toUpperCase()) {\n\t\t\t\t$(\"#sigEditForm #sigID\").focus().parent().prev(\"th\").addClass(\"critical\");\n\t\t\t\tValidationTooltips.open({target: $(\"#sigEditForm #sigID\")}).setContent(\"Must be only letters!\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Check for existing ID\n\t\tif ($(\"#sigEditForm #sigID\").val().toUpperCase() !== (viewingSystemID == tripwire.client.signatures[$(this).data(\"id\")].systemID ? tripwire.client.signatures[$(this).data(\"id\")].signatureID : tripwire.client.signatures[$(this).data(\"id\")].sig2ID) && $.map(tripwire.client.signatures, function(sig) {return sig.mask == \"273.0\" && ((options.chain.active != null && !options.chain.tabs[options.chain.active].evescout) || options.chain.active == null) ? null : (viewingSystemID == sig.systemID ? sig.signatureID : sig.sig2ID)}).indexOf($(\"#sigEditForm #sigID\").val().toUpperCase()) !== -1) {\n\t\t\t$(\"#sigEditForm #sigID\").focus().parent().prev(\"th\").addClass(\"critical\");\n\t\t\tValidationTooltips.open({target: $(\"#sigEditForm #sigID\")}).setContent(\"Signature ID already exists! <input type='button' autofocus='true' id='overwrite' value='Overwrite' style='margin-bottom: -4px; margin-top: -4px; font-size: 0.8em;' data-id='\"+ $(\"#sigTable tr:has(td:first-child:contains(\"+$(\"#sigEditForm #sigID\").val().toUpperCase()+\"))\").data(\"id\") +\"' />\");\n\t\t\t$(\"#overwrite\").focus();\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Check for empty WH type\n\tif ($(\"#sigEditForm #sigType\").val() == \"Wormhole\" && $(\"#sigEditForm #whType\").val() == '') {\n\t\t$(\"#sigEditForm #whType\").focus().parent().prev(\"th\").addClass(\"critical\");\n\t\tValidationTooltips.open({target: $(\"#sigEditForm #whType\")}).setContent(\"Must specify a wormhole type!\");\n\t\treturn;\n\t}\n\n\t// Check for valid WH type\n\tif ($(\"#sigEditForm #sigType\").val() == \"Wormhole\" && whList.indexOf($(\"#sigEditForm #whType\").val()) == -1) {\n\t\t$(\"#sigEditForm #whType\").focus().parent().prev(\"th\").addClass(\"critical\");\n\t\tValidationTooltips.open({target: $(\"#sigEditForm #whType\")}).setContent(\"Not a valid wormhole type!\");\n\t\treturn;\n\t}\n\n\t// Check for valid Leads To\n\tif ($(\"#sigEditForm #sigType\").val() == \"Wormhole\" && $(\"#sigEditForm #connection\").val() && tripwire.aSigSystems.indexOf($(\"#sigEditForm #connection\").val()) == -1) {\n\t\t$(\"#sigEditForm #connection\").focus().parent().prev(\"th\").addClass(\"critical\");\n\t\tValidationTooltips.open({target: $(\"#sigEditForm #connection\")}).setContent(\"Not a valid leads to system!\");\n\t\treturn;\n\t}\n\n\n\tvar form = $(this).serializeObject();\n\tform.id = $(this).data(\"id\");\n\tform.systemID = viewingSystemID; // needed??\n\n\tif (tripwire.wormholes[form.whType]) {\n\t\tform.lifeLength = tripwire.wormholes[form.whType].life.split(\" \")[0];\n\t} else if (form.side == \"parent\") {\n\t\tform.lifeLength = tripwire.wormholes[tripwire.client.signatures[form.id].sig2Type] ? tripwire.wormholes[tripwire.client.signatures[form.id].sig2Type].life.split(\" \")[0] : form.lifeLength;\n\t} else {\n\t\tform.lifeLength = tripwire.wormholes[tripwire.client.signatures[form.id].type] ? tripwire.wormholes[tripwire.client.signatures[form.id].type].life.split(\" \")[0] : form.lifeLength;\n\t}\n\n\tform.connectionID = form.connectionName ? Object.index(tripwire.systems, \"name\", form.connectionName) || null : null;\n\tform.connectionName = form.connectionID ? (form.side == \"parent\" ? (tripwire.client.signatures[form.id].connectionID > 0 ? tripwire.client.signatures[form.id].connection : null) : (tripwire.client.signatures[form.id].systemID > 0 ? tripwire.client.signatures[form.id].system : null)) : form.connectionName;\n\t//form.connectionName = tripwire.systems[form.connectionID] ? (form.side == \"parent\" ? tripwire.client.signatures[form.id].connection : tripwire.client.signatures[form.id].system) || null : form.connectionName;\n\tform.whLife = tripwire.client.signatures[form.id].life != form.whLife ? form.whLife : null;\n\tform.whLife = !tripwire.client.signatures[form.id].life ? \"New \" + form.whLife : form.whLife;\n\tform.sig2ID = form.side == \"parent\" ? tripwire.client.signatures[form.id].sig2ID : tripwire.client.signatures[form.id].signatureID;\n\tform.sig2Type = form.side == \"parent\" ? tripwire.client.signatures[form.id].sig2Type : tripwire.client.signatures[form.id].type;\n\tform.class = sigClass(viewingSystem, form.sig2Type);\n\tform.class2 = sigClass(form.connectionID ? tripwire.systems[form.connectionID].name : null, form.whType);\n\tvar data = {\"request\": {\"signatures\": {\"update\": form}}};\n\tvar undo = [tripwire.client.signatures[form.id]];\n\n\t// Prevent duplicate submitting\n\t$(\"#sigEditForm input[type=submit]\").attr(\"disabled\", true);\n\t$(\"#dialog-sigEdit\").parent().find(\":button:contains('Save')\").button(\"disable\");\n\n\tvar success = function(data) {\n\t\tif (data.result == true) {\n\t\t\t$(\"#dialog-sigEdit\").dialog(\"close\");\n\n\t\t\t$(\"#undo\").removeClass(\"disabled\");\n\t\t\tif (viewingSystemID in tripwire.signatures.undo) {\n\t\t\t\ttripwire.signatures.undo[viewingSystemID].push({action: \"update\", signatures: undo});\n\t\t\t} else {\n\t\t\t\ttripwire.signatures.undo[viewingSystemID] = [{action: \"update\", signatures: undo}];\n\t\t\t}\n\n\t\t\tsessionStorage.setItem(\"tripwire_undo\", JSON.stringify(tripwire.signatures.undo));\n\t\t}\n\t}\n\n\tvar always = function(data) {\n\t\t$(\"#sigEditForm input[type=submit]\").removeAttr(\"disabled\");\n\t\t$(\"#dialog-sigEdit\").parent().find(\":button:contains('Save')\").button(\"enable\");\n\t}\n\n\ttripwire.refresh('refresh', data, success, always);\n});\n","var activity = new function() {\n\tthis.graph;\n\tthis.options;\n\tthis.view;\n\tthis.span = 24;\n\tthis.columns = [\n\t\t{id: \"time\", label: \"Time\", role: \"domain\", type: \"string\", calc: function(d, r) { return d.getValue(r, 0) + \"h\"; }},\n\t\t{id: \"jumps\", label: \"Jumps\", role: \"data\", type: \"number\", sourceColumn: 1, column: 1, title: \"Jumps\"},\n\t\t{id: \"podkills\", label: \"Pod Kills\", role: \"data\", type: \"number\", sourceColumn: 2, column: 2, title: \"Pod Kills\"},\n\t\t{id: \"shipkills\", label: \"Ship Kills\", role: \"data\", type: \"number\", sourceColumn: 3, column: 3, title: \"Ship Kills\"},\n\t\t{id: \"npckills\", label: \"NPC Kills\", role: \"data\", type: \"number\", sourceColumn: 4, column: 4, title: \"NPC Kills\"},\n\t\t//{id: \"annotationLabel\", label: \"Test\", role: \"annotation\", type: \"string\", sourceColumn: 5, title: \"Test\"},\n\t\t//{id: \"annotationText\", label: \"Test\", role: \"annotationText\", type: \"string\", sourceColumn: 6, title: \"Test\"}\n\t];\n\n\tthis.getData = function(span, cache) {\n\t\tvar span = typeof(span) !== \"undefined\" ? span : this.span;\n\t\tvar cache = typeof(cache) !== \"undefined\" ? cache : true;\n\n\t\tvar json = $.ajax({\n\t\t\t\t\turl: \"activity_graph.php\",\n\t\t\t\t\tdata: {systemID: viewingSystemID, time: span},\n\t\t\t\t\ttype: \"GET\",\n\t\t\t\t\tdataType: \"JSON\",\n\t\t\t\t\tasync: false,\n\t\t\t\t\tcache: cache\n\t\t\t\t}).responseJSON;\n\n\t\tjson.rows.reverse();\n\n\t\tthis.view = new google.visualization.DataView(new google.visualization.DataTable(json));\n\t\tthis.view.setColumns(this.columns);\n\t\treturn this.view;\n\t};\n\n\tthis.selectHandler = function() {\n\t\tvar selections = activity.graph.getSelection();\n\n\t\tif (selections[0] && selections[0].row == null) {\n\t\t\tvar c = selections[0].column;\n\n\t\t\tif (activity.columns[c].sourceColumn) {\n\t\t\t\t//activity.columns[c].calc = function() { return null };\n\t\t\t\tactivity.columns[c].label = activity.columns[c].title + \" (off)\";\n\t\t\t\tdelete activity.columns[c].sourceColumn;\n\t\t\t} else {\n\t\t\t\tactivity.columns[c].sourceColumn = activity.columns[c].column;\n\t\t\t\tactivity.columns[c].label = activity.columns[c].title;\n\t\t\t\t//delete activity.columns[c].calc;\n\t\t\t}\n\n\t\t\tactivity.view.setColumns(activity.columns);\n\t\t\tactivity.options.animation.duration = 0;\n\t\t\tactivity.graph.draw(activity.view, activity.options);\n\t\t\tactivity.options.animation.duration = 500;\n\t\t}\n\t}\n\n\tthis.init = function() {\n\t\tthis.graph = new google.visualization.AreaChart(document.getElementById(\"activityGraph\"));\n\t\tthis.options = {\n\t\t\tisStacked: false,\n\t\t\tbackgroundColor: \"transparent\",\n\t\t\thAxis: {textStyle: {color: \"#999\", fontName: \"Verdana\", fontSize: 10}, showTextEvery: 3},\n\t\t\tvAxis: {textStyle: {color: \"#666\", fontName: \"Verdana\", fontSize: 10}, viewWindowMode: \"maximized\", viewWindow: {min: 0}, maxValue: 5},\n\t\t\tgridlineColor: \"#454545\",\n\t\t\tpointSize: 2,\n\t\t\tlineWidth: 1,\n\t\t\tchartArea: {left: \"10%\", top: \"5%\", width: \"88%\", height: \"85%\"},\n\t\t\tlegend: {position: \"in\", textStyle: {color: \"#CCC\", fontName: \"Verdana\", fontSize: 8.5}},\n\t\t\tanimation: {duration: 500, easing: \"inAndout\"},\n\t\t\ttooltip: {showColorCode: true},\n\t\t\tannotations: {style: \"line\", textStyle: {fontSize: 12, color: \"#ccc\"}, domain: 0},\n\t\t\tfocusTarget: \"category\"\n\t\t}\n\n\t\tgoogle.visualization.events.addListener(this.graph, \"select\", this.selectHandler);\n\n\t\tthis.graph.draw(this.getData(this.span), this.options);\n\t}\n\n\tthis.time = function(span) {\n\t\tswitch(span) {\n\t\t\tcase 24:\n\t\t\t\tthis.options.hAxis.showTextEvery = 3;\n\t\t\t\tbreak;\n\t\t\tcase 48:\n\t\t\t\tthis.options.hAxis.showTextEvery = 6;\n\t\t\t\tbreak;\n\t\t\tcase 168:\n\t\t\t\tthis.options.hAxis.showTextEvery = 24;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.span = span;\n\t\tthis.graph.draw(this.getData(span), this.options);\n\t}\n\n\tthis.redraw = function() {\n\t\tthis.graph.draw(this.view, this.options);\n\t}\n\n\tthis.refresh = function(cache) {\n\t\tthis.graph.draw(this.getData(this.span, cache), this.options);\n\t}\n\n\tgoogle.setOnLoadCallback(this.init());\n\t//this.init();\n}\n","var chain = new function() {\n\tthis.map, this.view, this.options, this.drawing, this.data = {};\n\n\tthis.newView = function(json) {\n\t\tthis.view = new google.visualization.DataView(new google.visualization.DataTable(json));\n\t\treturn this.view;\n\t};\n\n\tthis.activity = function(data) {\n\t\t/*\tfunction for adding recent activity to chain map nodes\t*/\n\t\t//var data = typeof(data) !== \"undefined\" ? data : this.data.activity;\n\n\t\t// Hide all activity colored dots instead of checking each one\n\t\t$(\"#chainMap .nodeActivity > span:not(.invisible)\").addClass(\"invisible\");\n\n\t\t// Loop through passed data and show dots by system\n\t\tfor (var x in data) {\n\t\t\tvar systemID = data[x].systemID;\n\t\t\tvar shipJumps = data[x].shipJumps;\n\t\t\tvar podKills = data[x].podKills;\n\t\t\tvar shipKills = data[x].shipKills;\n\t\t\tvar npcKills = data[x].npcKills;\n\t\t\tvar $node = $(\"#chainMap [data-nodeid=\"+systemID+\"] > .nodeActivity\");\n\n\t\t\tif (shipJumps > 0) {\n\t\t\t\t$node.find(\".jumps\").removeClass(\"invisible\").attr(\"title\", shipJumps+\" Jumps\");\n\t\t\t}\n\n\t\t\tif (podKills > 0) {\n\t\t\t\t$node.find(\".pods\").removeClass(\"invisible\").attr(\"title\", podKills+\" Pod Kills\");\n\t\t\t}\n\n\t\t\tif (shipKills > 0) {\n\t\t\t\t$node.find(\".ships\").removeClass(\"invisible\").attr(\"title\", shipKills+\" Ship Kills\");\n\t\t\t}\n\n\t\t\tif (npcKills > 0) {\n\t\t\t\t$node.find(\".npcs\").removeClass(\"invisible\").attr(\"title\", npcKills+\" NPC Kills\");\n\t\t\t}\n\t\t}\n\n\t\t$(\"#chainMap .nodeActivity > span[title]\").jBox(\"Tooltip\", {position: {y: \"bottom\"}});\n\n\t\treturn data;\n\t}\n\n\tthis.occupied = function(data) {\n\t\t/*\tfunction for showing occupied icon  */\n\n\t\t// Hide all icons instead of checking each one\n\t\t$(\"#chainMap [data-icon='user'], #chainMap [data-icon='user'] + .badge\").addClass(\"invisible\");\n\n\t\t// Loop through passed data and show icons\n\t\tfor (var x in data) {\n\t\t\t$(\"#chainMap [data-nodeid='\"+data[x].systemID+\"'] [data-icon='user']\").removeClass(\"invisible\")\n\t\t\t$(\"#chainMap [data-nodeid='\"+data[x].systemID+\"'] [data-icon='user'] + .badge\").removeClass(\"invisible\").html(data[x].count);\n\t\t}\n\n\t\tOccupiedToolTips.attach($(\"#chainMap [data-icon='user']:not(.invisible)\"));\n\n\t\treturn data;\n\t}\n\n\tthis.flares = function(data) {\n\t\t/*\tfunction for coloring chain map nodes via flares  */\n\t\t//var data = typeof(data) !== \"undefined\" ? data : this.data.flares;\n\n\t\t// Remove all current node coloring instead of checking each one\n\t\t$(\"#chainMap td.node\").removeClass(\"redNode yellowNode greenNode\");\n\n\t\t// Remove all coloring from chain grid\n\t\t$(\"#chainGrid tr\").removeClass(\"red yellow green\");\n\n\t\t// Loop through passed data and add classes by system\n\t\tif (data) {\n\t\t\tfor (var x in data.flares) {\n\t\t\t\tvar systemID = data.flares[x].systemID;\n\t\t\t\tvar flare = data.flares[x].flare;\n\n\t\t\t\tvar row = ($(\"#chainMap [data-nodeid=\"+systemID+\"]\").parent().addClass(flare+\"Node\").parent().index() - 1) / 3 * 2;\n\n\t\t\t\tif (row > 0) {\n\t\t\t\t\t$(\"#chainGrid tr:eq(\"+row+\")\").addClass(flare).next().addClass(flare);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tthis.grid = function() {\n\t\t/*  function for showing/hiding grid lines  */\n\t\tif (options.chain.gridlines == false) { $(\"#chainGrid tr\").addClass(\"hidden\"); return false; }\n\n\t\t$(\"#chainGrid tr\").removeClass(\"hidden\");\n\t\t//$(\"#chainGrid\").css(\"width\", \"100%\");\n\n\t\tvar rows = $(\".google-visualization-orgchart-table tr:has(.node)\").length * 2 - 1;\n\n\t\t$(\"#chainGrid tr:gt(\"+rows+\")\").addClass(\"hidden\");\n\t}\n\n\tthis.lines = function(data) {\n\t\t//var data = typeof(data) !== \"undefined\" ? data : this.data.lines;\n\n\t\tfunction drawNodeLine(system, parent, mode, signatureID) {\n\t\t\t/*\tfunction for drawing colored lines  */\n\n\t\t\t// Find node in chainmap\n\t\t\t//var $node = $(\"#chainMap [data-nodeid='\"+system+\"']\").parent();\n\t\t\tvar $node = $(\"#chainMap #node\"+system).parent();\n\n\t\t\tif ($node.length == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Get node # in this line\n\t\t\tvar nodeIndex = Math.ceil(($node[0].cellIndex + 1) / 2 - 1);\n\n\t\t\t// applly to my top line\n\t\t\tvar $connector = $($node.parent().prev().children(\"td.google-visualization-orgchart-lineleft, td.google-visualization-orgchart-lineright\")[nodeIndex]).addClass(\"left-\"+mode+\" right-\"+mode);\n\t\t\t//var $connector = $($node.parent().prev().find(\"td:not([colspan])\")[nodeIndex]).addClass(\"left-\"+mode+\" right-\"+mode).attr(\"data-signatureid\", signatureID);\n\n\t\t\t// Find parent node\n\t\t\t//var $parent = $(\"#chainMap [data-nodeid='\"+parent+\"']\").parent();\n\t\t\tvar $parent = $(\"#chainMap #node\"+parent).parent();\n\n\t\t\tif ($parent.length == 0 || $connector.length == 0)\n\t\t\t\treturn false;\n\n\t\t\t// Find the col of my top line\n\t\t\tvar nodeCol = 0, connectorCell = $connector[0].cellIndex;\n\t\t\t$node.parent().prev().find(\"td\").each(function(index) {\n\t\t\t\tnodeCol += this.colSpan;\n\n\t\t\t\tif (index == connectorCell) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Get node # in this line\n\t\t\tvar parentIndex = Math.ceil(($parent[0].cellIndex + 1) / 2 - 1);\n\n\t\t\t// Compensate for non-parent nodes (slight performance hit ~10ms)\n\t\t\tvar newparentIndex = parentIndex;\n\t\t\tfor (var i = 0; i <= parentIndex; i++) {\n\t\t\t\tvar checkSystem = 0;//$node.parent().prev().prev().prev().find(\"td:has([data-nodeid]):eq(\"+i+\")\").find(\"[data-nodeid]\").data(\"nodeid\");\n\t\t\t\t$node.parent().prev().prev().prev().find(\"td > [data-nodeid]\").each(function(index) {\n\t\t\t\t\tif (index == i) {\n\t\t\t\t\t\tcheckSystem = $(this).attr(\"id\").replace(\"node\", \"\");//$(this).data(\"nodeid\");\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif ($.map(data.map.rows, function(node) { return node.c[1].v == checkSystem ? node : null; }).length <= 0) {\n\t\t\t\t\tnewparentIndex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentIndex = newparentIndex;\n\n\t\t\t// Apply to parent bottom line\n\t\t\tvar $connecte = $($node.parent().prev().prev().children(\"td.google-visualization-orgchart-lineleft, td.google-visualization-orgchart-lineright\")[parentIndex]).addClass(\"left-\"+mode+\" right-\"+mode);\n\t\t\t//var $connecte = $($node.parent().prev().prev().find(\"td:not([colspan])\")[parentIndex]).addClass(\"left-\"+mode+\" right-\"+mode).attr(\"data-signatureid\", signatureID);\n\n\t\t\t// the beans\n\t\t\tvar col = 0, parent = false, me = false;\n\t\t\t$node.parent().prev().prev().find(\"td\").each(function(index, value) {\n\t\t\t\tcol += this.colSpan;\n\n\t\t\t\tif (me && parent) {\n\t\t\t\t\t// All done - get outta here\n\t\t\t\t\treturn false;\n\t\t\t\t} else if (typeof($connecte[0]) != \"undefined\" && $connecte[0].cellIndex == index) {\n\t\t\t\t\tparent = true;\n\n\t\t\t\t\t$(this).addClass(\"left-\"+mode);\n\n\t\t\t\t\t// remove bottom border that points to the right\n\t\t\t\t\tif (!me && col != nodeCol) {\n\t\t\t\t\t\t$(this).addClass(\"bottom-\"+mode);\n\t\t\t\t\t}\n\n\t\t\t\t\t// parent and node are same - we are done\n\t\t\t\t\tif (nodeCol == col) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else if (col == nodeCol) {\n\t\t\t\t\tme = true;\n\n\t\t\t\t\t$(this).addClass(\"bottom-\"+mode);\n\t\t\t\t} else if (me || parent) {\n\t\t\t\t\tvar tempCol = 0, breaker = false, skip = false;\n\n\t\t\t\t\t$node.parent().prev().find(\"td\").each(function(index) {\n\t\t\t\t\t\ttempCol += this.colSpan;\n\n\t\t\t\t\t\tif (tempCol == col && ($(this).hasClass(\"google-visualization-orgchart-lineleft\") || $(this).hasClass(\"google-visualization-orgchart-lineright\"))) {\n\t\t\t\t\t\t\tif (parent == false) {\n\t\t\t\t\t\t\t\t// Stop looking cuz there is another node between us and parent\n\t\t\t\t\t\t\t\tbreaker = true;\n\t\t\t\t\t\t\t\t$connecte.removeClass(\"left-\"+mode+\" right-\"+mode);\n\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t} else if (parent == true) {\n\t\t\t\t\t\t\t\t// Lets make sure there isnt a node between the parent and me\n\t\t\t\t\t\t\t\t$connecte.removeClass(\"left-\"+mode+\" right-\"+mode);\n\n\t\t\t\t\t\t\t\t$node.parent().prev().prev().find(\"td\").each(function(index) {\n\t\t\t\t\t\t\t\t\tif (index >= $connecte[0].cellIndex) {\n\t\t\t\t\t\t\t\t\t\t// there is a node after parent but before me\n\t\t\t\t\t\t\t\t\t\t$(this).removeClass(\"bottom-\"+mode);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tskip = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (breaker) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!skip) {\n\t\t\t\t\t\t$(this).addClass(\"bottom-\"+mode);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (var x in data.lines) {\n\t\t\tdrawNodeLine(data.lines[x][0], data.lines[x][1], data.lines[x][2], data.lines[x][3]);\n\t\t}\n\t}\n\n\tthis.nodes = function(map) {\n\t\tvar chain = {cols: [{label: \"System\", type: \"string\"}, {label: \"Parent\", type: \"string\"}], rows: []};\n\t\tvar frigTypes = [\"Q003\", \"E004\", \"L005\", \"Z006\", \"M001\", \"C008\", \"G008\", \"A009\"];\n\t\tvar connections = [];\n\n\t\tfunction topLevel(systemID, id) {\n\t\t\tif (!systemID || !tripwire.systems[systemID])\n\t\t\t\treturn false;\n\n\t\t\t// System type switch\n\t\t\tvar systemType;\n\t\t\tif (tripwire.systems[systemID].class)\n\t\t\t\tsystemType = \"<span class='wh'>C\" + tripwire.systems[systemID].class + \"</span>\";\n\t\t\telse if (tripwire.systems[systemID].security >= 0.45)\n\t\t\t\tsystemType = \"<span class='hisec'>HS</span>\";\n\t\t\telse if (tripwire.systems[systemID].security > 0.0)\n\t\t\t\tsystemType = \"<span class='lowsec'>LS</span>\";\n\t\t\telse if (tripwire.systems[systemID].security <= 0.0)\n\t\t\t\tsystemType = \"<span class='nullsec'>NS</span>\";\n\n\t\t\tvar effectClass = null, effect = null;\n\t\t\tif (tripwire.systems[systemID].class) {\n\t\t\t\tswitch(tripwire.systems[systemID].effect) {\n\t\t\t\t\tcase \"Black Hole\":\n\t\t\t\t\t\teffectClass = \"blackhole\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Cataclysmic Variable\":\n\t\t\t\t\t\teffectClass = \"cataclysmic-variable\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Magnetar\":\n\t\t\t\t\t\teffectClass = \"magnetar\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Pulsar\":\n\t\t\t\t\t\teffectClass = \"pulsar\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Red Giant\":\n\t\t\t\t\t\teffectClass = \"red-giant\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Wolf-Rayet Star\":\n\t\t\t\t\t\teffectClass = \"wolf-rayet\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\teffect = tripwire.systems[systemID].effect;\n\t\t\t}\n\n\t\t\tvar system = {v: id};\n\t\t\tvar chainNode = \"<div id='node\"+id+\"' data-nodeid='\"+systemID+\"'>\"\n\t\t\t\t\t\t\t+\t\"<div class='nodeIcons'>\"\n\t\t\t\t\t\t\t+\t\t\"<div style='float: left;'>\"\n\t\t\t\t\t\t\t+\t\t\t\"<i class='whEffect' \"+(effectClass ? \"data-icon='\"+effectClass+\"' data-tooltip='\"+effect+\"'\" : null)+\"></i>\"\n\t\t\t\t\t\t\t+\t\t\"</div>\"\n\t\t\t\t\t\t\t+\t\t\"<div style='float: right;'>\"\n\t\t\t\t\t\t\t+\t\t\t\"<i data-icon='user' class='invisible'></i>\"\n\t\t\t\t\t\t\t+\t\t\t\"<span class='badge' class='invisible'></span>\"\n\t\t\t\t\t\t\t+\t\t\"</div>\"\n\t\t\t\t\t\t\t+\t\"</div>\"\n\t\t\t\t\t\t\t+\t\"<h4 class='nodeClass'>\"+systemType+\"</h4>\"\n\t\t\t\t\t\t\t+\t\"<h4 class='nodeSystem'>\"\n\t\t\t\t\t\t\t+\t\t\"<a href='.?system=\"+tripwire.systems[systemID].name+\"'>\"+(options.chain.tabs[options.chain.active] && options.chain.tabs[options.chain.active].systemID != 0 ? options.chain.tabs[options.chain.active].name : tripwire.systems[systemID].name)+\"</a>\"\n\t\t\t\t\t\t\t+\t\"</h4>\"\n\t\t\t\t\t\t\t+\t\"<h4 class='nodeType'>&nbsp;</h4>\"\n\t\t\t\t\t\t\t+\t\"<div class='nodeActivity'>\"\n\t\t\t\t\t\t\t+\t\t\"<span class='jumps invisible'>&#9679;</span>&nbsp;<span class='pods invisible'>&#9679;</span>&nbsp;&nbsp;<span class='ships invisible'>&#9679;</span>&nbsp;<span class='npcs invisible'>&#9679;</span>\"\n\t\t\t\t\t\t\t+\t\"</div>\"\n\t\t\t\t\t\t\t+\"</div>\"\n\n\t\t\tsystem.f = chainNode;\n\n\t\t\treturn system;\n\t\t}\n\n\t\tfunction findLinks(system) {\n\t\t\tif (system[0] <= 0) return false;\n\n\t\t\tvar parentID = parseInt(system[1]), childID = chainList.length;\n\n\t\t\tfor (var x in chainData) {\n\t\t\t\tvar link = chainData[x];\n\n\t\t\t\tif ($.inArray(link.id, usedLinks) == -1) {\n\t\t\t\t\tif (link.systemID == system[0]) {\n\t\t\t\t\t\tvar node = {};\n\t\t\t\t\t\tnode.id = link.id;\n\t\t\t\t\t\tnode.life = link.life;\n\t\t\t\t\t\tnode.mass = link.mass;\n\t\t\t\t\t\tnode.time = link.time;\n\n\t\t\t\t\t\tnode.parent = {};\n\t\t\t\t\t\tnode.parent.id = parentID;\n\t\t\t\t\t\tnode.parent.systemID = link.systemID;\n\t\t\t\t\t\tnode.parent.name = link.system;\n\t\t\t\t\t\tnode.parent.type = link.sig2Type;\n\t\t\t\t\t\tnode.parent.typeBM = link.type2BM;\n\t\t\t\t\t\tnode.parent.classBM = link.class2BM;\n\t\t\t\t\t\tnode.parent.nth = link.nth2;\n\t\t\t\t\t\tnode.parent.signatureID = link.sig2ID;\n\n\t\t\t\t\t\tnode.child = {};\n\t\t\t\t\t\tnode.child.id = ++childID;\n\t\t\t\t\t\tnode.child.systemID = link.connectionID;\n\t\t\t\t\t\tnode.child.name = link.connection;\n\t\t\t\t\t\tnode.child.type = link.type;\n\t\t\t\t\t\tnode.child.typeBM = link.typeBM;\n\t\t\t\t\t\tnode.child.classBM = link.classBM;\n\t\t\t\t\t\tnode.child.nth = link.nth;\n\t\t\t\t\t\tnode.child.signatureID = link.signatureID;\n\n\t\t\t\t\t\tchainLinks.push(node);\n\t\t\t\t\t\tchainList.push([node.child.systemID, node.child.id, system[2]]);\n\t\t\t\t\t\tusedLinks.push(node.id);\n\t\t\t\t\t\t//usedLinks[system[2]].push(node.id);\n\n\t\t\t\t\t\tif ($(\"#show-viewing\").hasClass(\"active\") && tripwire.systems[node.child.systemID] && !tripwire.systems[viewingSystemID].class && !tripwire.systems[node.child.systemID].class) {\n\t\t\t\t\t\t\tvar jumps = guidance.findShortestPath(tripwire.map.shortest, [viewingSystemID - 30000000, node.child.systemID - 30000000]).length - 1;\n\n\t\t\t\t\t\t\tvar calcNode = {};\n\t\t\t\t\t\t\tcalcNode.life = \"Gate\";\n\t\t\t\t\t\t\tcalcNode.parent = {};\n\t\t\t\t\t\t\tcalcNode.parent.id = node.child.id;\n\t\t\t\t\t\t\tcalcNode.parent.systemID = node.child.systemID;\n\t\t\t\t\t\t\tcalcNode.parent.name = node.child.name;\n\t\t\t\t\t\t\tcalcNode.parent.type = node.child.type;\n\t\t\t\t\t\t\tcalcNode.parent.nth = node.child.nth;\n\n\t\t\t\t\t\t\tcalcNode.child = {};\n\t\t\t\t\t\t\tcalcNode.child.id = ++childID;\n\t\t\t\t\t\t\tcalcNode.child.systemID = viewingSystemID\n\t\t\t\t\t\t\tcalcNode.child.name = tripwire.systems[viewingSystemID].name;\n\t\t\t\t\t\t\tcalcNode.child.type = jumps;\n\t\t\t\t\t\t\tcalcNode.child.nth = null;\n\t\t\t\t\t\t\tcalcNode.child.signatureID = jumps;\n\n\t\t\t\t\t\t\tchainLinks.push(calcNode);\n\t\t\t\t\t\t\tchainList.push([0, childID]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($(\"#show-favorite\").hasClass(\"active\") && tripwire.systems[node.child.systemID]) {\n\t\t\t\t\t\t\tfor (x in options.favorites) {\n\t\t\t\t\t\t\t\tif (tripwire.systems[options.favorites[x]].regionID >= 11000000 || tripwire.systems[node.child.systemID].regionID >= 11000000)\n\t\t\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t\t\tvar jumps = guidance.findShortestPath(tripwire.map.shortest, [options.favorites[x] - 30000000, node.child.systemID - 30000000]).length - 1;\n\n\t\t\t\t\t\t\t\tvar calcNode = {};\n\t\t\t\t\t\t\t\tcalcNode.life = \"Gate\";\n\t\t\t\t\t\t\t\tcalcNode.parent = {};\n\t\t\t\t\t\t\t\tcalcNode.parent.id = node.child.id;\n\t\t\t\t\t\t\t\tcalcNode.parent.systemID = node.child.systemID;\n\t\t\t\t\t\t\t\tcalcNode.parent.name = node.child.name;\n\t\t\t\t\t\t\t\tcalcNode.parent.type = node.child.type;\n\t\t\t\t\t\t\t\tcalcNode.parent.nth = node.child.nth;\n\n\t\t\t\t\t\t\t\tcalcNode.child = {};\n\t\t\t\t\t\t\t\tcalcNode.child.id = ++childID;\n\t\t\t\t\t\t\t\tcalcNode.child.systemID = options.favorites[x];\n\t\t\t\t\t\t\t\tcalcNode.child.name = tripwire.systems[options.favorites[x]].name;\n\t\t\t\t\t\t\t\tcalcNode.child.type = jumps;\n\t\t\t\t\t\t\t\tcalcNode.child.nth = null;\n\t\t\t\t\t\t\t\tcalcNode.child.signatureID = jumps;\n\n\t\t\t\t\t\t\t\tchainLinks.push(calcNode);\n\t\t\t\t\t\t\t\tchainList.push([0, childID]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (link.connectionID == system[0]) {\n\t\t\t\t\t\tvar node = {};\n\t\t\t\t\t\tnode.id = link.id;\n\t\t\t\t\t\tnode.life = link.life;\n\t\t\t\t\t\tnode.mass = link.mass;\n\t\t\t\t\t\tnode.time = link.time;\n\n\t\t\t\t\t\tnode.parent = {};\n\t\t\t\t\t\tnode.parent.id = parentID;\n\t\t\t\t\t\tnode.parent.systemID = link.connectionID;\n\t\t\t\t\t\tnode.parent.name = link.connection;\n\t\t\t\t\t\tnode.parent.type = link.type;\n\t\t\t\t\t\tnode.parent.typeBM = link.typeBM;\n\t\t\t\t\t\tnode.parent.classBM = link.classBM;\n\t\t\t\t\t\tnode.parent.nth = link.nth;\n\t\t\t\t\t\tnode.parent.signatureID = link.signatureID;\n\n\t\t\t\t\t\tnode.child = {};\n\t\t\t\t\t\tnode.child.id = ++childID;\n\t\t\t\t\t\tnode.child.systemID = link.systemID;\n\t\t\t\t\t\tnode.child.name = link.system;\n\t\t\t\t\t\tnode.child.type = link.sig2Type;\n\t\t\t\t\t\tnode.child.typeBM = link.type2BM;\n\t\t\t\t\t\tnode.child.classBM = link.class2BM;\n\t\t\t\t\t\tnode.child.nth = link.nth2;\n\t\t\t\t\t\tnode.child.signatureID = link.sig2ID;\n\n\t\t\t\t\t\tchainLinks.push(node);\n\t\t\t\t\t\tchainList.push([node.child.systemID, node.child.id, system[2]]);\n\t\t\t\t\t\tusedLinks.push(node.id);\n\t\t\t\t\t\t//usedLinks[system[2]].push(node.id);\n\n\t\t\t\t\t\tif ($(\"#show-viewing\").hasClass(\"active\") && tripwire.systems[node.child.systemID] && !tripwire.systems[viewingSystemID].class && !tripwire.systems[node.child.systemID].class) {\n\t\t\t\t\t\t\tvar jumps = guidance.findShortestPath(tripwire.map.shortest, [viewingSystemID - 30000000, node.child.systemID - 30000000]).length - 1;\n\n\t\t\t\t\t\t\tvar calcNode = {};\n\t\t\t\t\t\t\tcalcNode.life = \"Gate\";\n\t\t\t\t\t\t\tcalcNode.parent = {};\n\t\t\t\t\t\t\tcalcNode.parent.id = node.child.id;\n\t\t\t\t\t\t\tcalcNode.parent.systemID = node.child.systemID;\n\t\t\t\t\t\t\tcalcNode.parent.name = node.child.name;\n\t\t\t\t\t\t\tcalcNode.parent.type = node.child.type;\n\t\t\t\t\t\t\tcalcNode.parent.nth = node.child.nth;\n\n\t\t\t\t\t\t\tcalcNode.child = {};\n\t\t\t\t\t\t\tcalcNode.child.id = ++childID;\n\t\t\t\t\t\t\tcalcNode.child.systemID = viewingSystemID;\n\t\t\t\t\t\t\tcalcNode.child.name = tripwire.systems[viewingSystemID].name;\n\t\t\t\t\t\t\tcalcNode.child.type = jumps;\n\t\t\t\t\t\t\tcalcNode.child.nth = null;\n\t\t\t\t\t\t\tcalcNode.child.signatureID = jumps;\n\n\t\t\t\t\t\t\tchainLinks.push(calcNode);\n\t\t\t\t\t\t\tchainList.push([0, childID]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($(\"#show-favorite\").hasClass(\"active\") && tripwire.systems[node.child.systemID]) {\n\t\t\t\t\t\t\tfor (x in options.favorites) {\n\t\t\t\t\t\t\t\tif (tripwire.systems[options.favorites[x]].regionID >= 11000000 || tripwire.systems[node.child.systemID].regionID >= 11000000)\n\t\t\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t\t\tvar jumps = guidance.findShortestPath(tripwire.map.shortest, [options.favorites[x] - 30000000, node.child.systemID - 30000000]).length - 1;\n\n\t\t\t\t\t\t\t\tvar calcNode = {};\n\t\t\t\t\t\t\t\tcalcNode.life = \"Gate\";\n\t\t\t\t\t\t\t\tcalcNode.parent = {};\n\t\t\t\t\t\t\t\tcalcNode.parent.id = node.child.id;\n\t\t\t\t\t\t\t\tcalcNode.parent.systemID = node.child.systemID;\n\t\t\t\t\t\t\t\tcalcNode.parent.name = node.child.name;\n\t\t\t\t\t\t\t\tcalcNode.parent.type = node.child.type;\n\t\t\t\t\t\t\t\tcalcNode.parent.nth = node.child.nth;\n\n\t\t\t\t\t\t\t\tcalcNode.child = {};\n\t\t\t\t\t\t\t\tcalcNode.child.id = ++childID;\n\t\t\t\t\t\t\t\tcalcNode.child.systemID = options.favorites[x];\n\t\t\t\t\t\t\t\tcalcNode.child.name = tripwire.systems[options.favorites[x]].name;\n\t\t\t\t\t\t\t\tcalcNode.child.type = jumps;\n\t\t\t\t\t\t\t\tcalcNode.child.nth = null;\n\t\t\t\t\t\t\t\tcalcNode.child.signatureID = jumps;\n\n\t\t\t\t\t\t\t\tchainLinks.push(calcNode);\n\t\t\t\t\t\t\t\tchainList.push([0, childID]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (false && $(\"#home\").hasClass(\"active\")) {\n\t\t\t$(\"#chainError\").hide();\n\n\t\t\tvar row = {c: []};\n\t\t\tvar systemID = $.map(tripwire.systems, function(system, id) { return system.name == options.chain.home ? id : null; })[0];\n\n\t\t\trow.c.push(topLevel(systemID, 1), {v: null});\n\n\t\t\tchain.rows.push(row);\n\n\t\t\tvar chainList = [[systemID, 1]];\n\t\t\tvar chainData = map;\n\t\t\tvar chainLinks = [];\n\t\t\tvar usedLinks = [];\n\n\t\t\tfor (var i = 0; i < chainList.length; ++i) {\n\t\t\t\tfindLinks(chainList[i]);\n\t\t\t}\n\t\t} else if (false && $(\"#k-space\").hasClass(\"active\")) {\n\t\t\t$(\"#chainError\").hide();\n\n\t\t\tvar chainList = [];//$.map(tripwire.systems, function(system, id) { return system.class ? null : [id, 1]; });\n\t\t\tvar kspace = $.map(tripwire.systems, function(system, id) { return system.class ? null : id; });\n\t\t\tvar chainData = map;\n\t\t\tvar chainLinks = [];\n\t\t\tvar usedLinks = [];\n\n\t\t\tvar i = 0;\n\t\t\tfor (var x in map) {\n\t\t\t\tif ($.inArray(map[x].systemID, kspace) != -1) {\n\t\t\t\t\ti++;\n\t\t\t\t\tchain.rows.push({c: [topLevel(map[x].systemID, i), {v: null}]});\n\t\t\t\t\tchainList.push([map[x].systemID, i]);\n\t\t\t\t} else if ($.inArray(map[x].connectionID, kspace) != -1) {\n\t\t\t\t\ti++;\n\t\t\t\t\tchain.rows.push({c: [topLevel(map[x].connectionID, i), {v: null}]});\n\t\t\t\t\tchainList.push([map[x].connectionID, i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < chainList.length; ++i) {\n\t\t\t\tfindLinks(chainList[i]);\n\t\t\t}\n\t\t} else if (false && $(\"#eve-scout\").hasClass(\"active\")) {\n\t\t\t$(\"#chainError\").hide();\n\n\t\t\tvar row = {c: []};\n\t\t\tvar systemID = 31000005;\n\n\t\t\trow.c.push(topLevel(systemID, 1), {v: null});\n\n\t\t\tchain.rows.push(row);\n\n\t\t\tvar chainList = [[systemID, 1]];\n\t\t\tvar chainData = map;\n\t\t\tvar chainLinks = [];\n\t\t\tvar usedLinks = [];\n\n\t\t\tfor (var i = 0; i < chainList.length; ++i) {\n\t\t\t\tfindLinks(chainList[i]);\n\t\t\t}\n\t\t} else if ($(\"#chainTabs .current\").length > 0) {\n\t\t\tvar systems = $(\"#chainTabs .current .name\").data(\"tab\").toString().split(\",\");\n\t\t\tvar chainList = [];\n\t\t\tvar chainData = map;\n\t\t\tvar chainLinks = [];\n\t\t\tvar usedLinks = [];\n\n\t\t\tif (systems == 0) {\n\t\t\t\tvar i = 0;\n\t\t\t\tfor (var x in map) {\n\t\t\t\t\tif (typeof(tripwire.systems[map[x].systemID].class) == \"undefined\") {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\t//usedLinks[map[x].systemID] = [];\n\t\t\t\t\t\tchain.rows.push({c: [topLevel(map[x].systemID, i), {v: null}]});\n\t\t\t\t\t\tchainList.push([map[x].systemID, i, map[x].systemID]);\n\t\t\t\t\t} else if (tripwire.systems[map[x].connectionID] && typeof(tripwire.systems[map[x].connectionID].class) == \"undefined\") {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\t//usedLinks[map[x].connectionID] = [];\n\t\t\t\t\t\tchain.rows.push({c: [topLevel(map[x].connectionID, i), {v: null}]});\n\t\t\t\t\t\tchainList.push([map[x].connectionID, i, map[x].connectionID]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (var x in systems) {\n\t\t\t\t\t//usedLinks[systems[x]] = [];\n\t\t\t\t\tchain.rows.push({c: [topLevel(systems[x], parseInt(x) + 1), {v: null}]});\n\t\t\t\t\tchainList.push([systems[x], parseInt(x) + 1, systems[x]]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//var startTime = window.performance.now();\n\t\t\tfor (var i = 0; i < chainList.length; i++) {\n\t\t\t\tfindLinks(chainList[i]);\n\t\t\t}\n\t\t\t//console.log(\"stint: \"+ (window.performance.now() - startTime));\n\t\t} else {\n\t\t\t$(\"#chainError\").hide();\n\n\t\t\tvar row = {c: []};\n\t\t\tvar systemID = viewingSystemID;\n\n\t\t\trow.c.push(topLevel(systemID, 1), {v: null});\n\n\t\t\tchain.rows.push(row);\n\n\t\t\tvar chainList = [[systemID, 1]];\n\t\t\tvar chainData = map;\n\t\t\tvar chainLinks = [];\n\t\t\tvar usedLinks = [];\n\n\t\t\tfor (var i = 0; i < chainList.length; ++i) {\n\t\t\t\tfindLinks(chainList[i]);\n\t\t\t}\n\t\t}\n\n\t\tfor (var x in chainLinks) {\n\t\t\tvar node = chainLinks[x];\n\t\t\tvar row = {c: []};\n\n\t\t\t// System type switch\n\t\t\tvar systemType;\n\t\t\tvar nodeClass = tripwire.systems[node.child.systemID] ? tripwire.systems[node.child.systemID].class : null;\n\t\t\tvar nodeSecurity = tripwire.systems[node.child.systemID] ? tripwire.systems[node.child.systemID].security : null;\n\t\t\tif (nodeClass == 6 || node.child.name == \"Class-6\" || (typeof(tripwire.wormholes[node.child.type]) != \"undefined\" && tripwire.wormholes[node.child.type].leadsTo == \"Class 6\"))\n\t\t\t\tsystemType = \"<span class='wh'>C6</span>\";\n\t\t\telse if (nodeClass == 5 || node.child.name == \"Class-5\" || (typeof(tripwire.wormholes[node.child.type]) != \"undefined\" && tripwire.wormholes[node.child.type].leadsTo == \"Class 5\"))\n\t\t\t\tsystemType = \"<span class='wh'>C5</span>\";\n\t\t\telse if (nodeClass == 4 || node.child.name == \"Class-4\" || (typeof(tripwire.wormholes[node.child.type]) != \"undefined\" && tripwire.wormholes[node.child.type].leadsTo == \"Class 4\"))\n\t\t\t\tsystemType = \"<span class='wh'>C4</span>\";\n\t\t\telse if (nodeClass == 3 || node.child.name == \"Class-3\" || (typeof(tripwire.wormholes[node.child.type]) != \"undefined\" && tripwire.wormholes[node.child.type].leadsTo == \"Class 3\"))\n\t\t\t\tsystemType = \"<span class='wh'>C3</span>\";\n\t\t\telse if (nodeClass == 2 || node.child.name == \"Class-2\" || (typeof(tripwire.wormholes[node.child.type]) != \"undefined\" && tripwire.wormholes[node.child.type].leadsTo == \"Class 2\"))\n\t\t\t\tsystemType = \"<span class='wh'>C2</span>\";\n\t\t\telse if (nodeClass == 1 || node.child.name == \"Class-1\" || (typeof(tripwire.wormholes[node.child.type]) != \"undefined\" && tripwire.wormholes[node.child.type].leadsTo == \"Class 1\"))\n\t\t\t\tsystemType = \"<span class='wh'>C1</span>\";\n\t\t\telse if (nodeClass > 6)\n\t\t\t\tsystemType = \"<span class='wh'>C\" + nodeClass + \"</span>\";\n\t\t\telse if (typeof(tripwire.wormholes[node.child.type]) != \"undefined\" && tripwire.wormholes[node.child.type].leadsTo.split(\" \").length > 1)\n\t\t\t\tsystemType = \"<span class='wh'>C\" + tripwire.wormholes[node.child.type].leadsTo.split(\" \")[1] + \"</span>\";\n\t\t\telse if (nodeSecurity >= 0.45 || node.child.name == \"High-Sec\" || (typeof(tripwire.wormholes[node.child.type]) != \"undefined\" && tripwire.wormholes[node.child.type].leadsTo == \"High-Sec\" && !nodeSecurity))\n\t\t\t\tsystemType = \"<span class='hisec'>HS</span>\";\n\t\t\telse if (nodeSecurity > 0.0 || node.child.name == \"Low-Sec\" || (typeof(tripwire.wormholes[node.child.type]) != \"undefined\" && tripwire.wormholes[node.child.type].leadsTo == \"Low-Sec\" && !nodeSecurity))\n\t\t\t\tsystemType = \"<span class='lowsec'>LS</span>\";\n\t\t\telse if ((nodeSecurity <= 0.0 && nodeSecurity != null) || node.child.name == \"Null-Sec\" || (typeof(tripwire.wormholes[node.child.type]) != \"undefined\" && tripwire.wormholes[node.child.type].leadsTo == \"Null-Sec\"))\n\t\t\t\tsystemType = \"<span class='nullsec'>NS</span>\";\n\t\t\telse\n\t\t\t\tsystemType = \"<span>&nbsp;</span>\";\n\n\t\t\tvar effectClass = null, effect = null;\n\t\t\tif (typeof(tripwire.systems[node.child.systemID]) != \"undefined\") {\n\t\t\t\tswitch(tripwire.systems[node.child.systemID].effect) {\n\t\t\t\t\tcase \"Black Hole\":\n\t\t\t\t\t\teffectClass = \"blackhole\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Cataclysmic Variable\":\n\t\t\t\t\t\teffectClass = \"cataclysmic-variable\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Magnetar\":\n\t\t\t\t\t\teffectClass = \"magnetar\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Pulsar\":\n\t\t\t\t\t\teffectClass = \"pulsar\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Red Giant\":\n\t\t\t\t\t\teffectClass = \"red-giant\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Wolf-Rayet Star\":\n\t\t\t\t\t\teffectClass = \"wolf-rayet\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\teffectClass = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\teffect = tripwire.systems[node.child.systemID].effect;\n\t\t\t}\n\n\t\t\tvar child = {v: node.child.id};\n\t\t\tvar chainNode = \"<div id='node\"+node.child.id+\"' data-nodeid='\"+node.child.systemID+\"' data-sigid='\"+node.id+\"'>\"\n\t\t\t\t\t\t\t+\t\"<div class='nodeIcons'>\"\n\t\t\t\t\t\t\t+\t\t\"<div style='float: left;'>\"\n\t\t\t\t\t\t\t+\t\t\t\"<i class='whEffect' \"+(effectClass ? \"data-icon='\"+effectClass+\"' data-tooltip='\"+effect+\"'\" : null)+\"></i>\"\n\t\t\t\t\t\t\t+\t\t\"</div>\"\n\t\t\t\t\t\t\t+\t\t\"<div style='float: right;'>\"\n\t\t\t\t\t\t\t+\t\t\t\"<i data-icon='user' class='invisible'></i>\"\n\t\t\t\t\t\t\t+\t\t\t\"<span class='badge' class='invisible'></span>\"\n\t\t\t\t\t\t\t+\t\t\"</div>\"\n\t\t\t\t\t\t\t+\t\"</div>\"\n\t\t\t\t\t\t\t+\t\"<h4 class='nodeClass'>\"+(systemType + sigFormat(node.child.classBM, \"class\"))+\"</h4>\"\n\t\t\t\t\t\t\t+\t\"<h4 class='nodeSystem'>\"\n\t\t\t\t\t\t\t+ \t(tripwire.systems[node.child.systemID] ? \"<a href='.?system=\"+tripwire.systems[node.child.systemID].name+\"'>\"+(node.child.name ? node.child.name : tripwire.systems[node.child.systemID].name)+\"</a>\" : \"<a class='invisible'>system</a>\")\n\t\t\t\t\t\t\t+\t\"</h4>\"\n\t\t\t\t\t\t\t+\t\"<h4 class='nodeType'>\"+(options.chain[\"node-reference\"] == \"id\" ? node.child.signatureID : node.child.type + sigFormat(node.child.typeBM, \"type\") || \"&nbsp;\")+\"</h4>\"\n\t\t\t\t\t\t\t+\t\"<div class='nodeActivity'>\"\n\t\t\t\t\t\t\t+\t\t\"<span class='jumps invisible'>&#9679;</span>&nbsp;<span class='pods invisible'>&#9679;</span>&nbsp;&nbsp;<span class='ships invisible'>&#9679;</span>&nbsp;<span class='npcs invisible'>&#9679;</span>\"\n\t\t\t\t\t\t\t+\t\"</div>\"\n\t\t\t\t\t\t\t+\"</div>\"\n\n\t\t\tchild.f = chainNode;\n\n\t\t\tvar parent = {v: node.parent.id};\n\n\t\t\trow.c.push(child, parent);\n\t\t\tchain.rows.push(row);\n\n\t\t\tif (node.life == \"Critical\" && ($.inArray(node.parent.type, frigTypes) != -1 || $.inArray(node.child.type, frigTypes) != -1))\n\t\t\t\tconnections.push(Array(child.v, parent.v, \"eol-frig\", node.id));\n\t\t\telse if (node.life == \"Critical\" && node.mass == \"Critical\")\n\t\t\t\tconnections.push(Array(child.v, parent.v, \"eol-critical\", node.id));\n\t\t\telse if (node.life == \"Critical\" && node.mass == \"Destab\")\n\t\t\t\tconnections.push(Array(child.v, parent.v, \"eol-destab\", node.id));\n\t\t\telse if ($.inArray(node.parent.type, frigTypes) != -1 || $.inArray(node.child.type, frigTypes) != -1)\n\t\t\t\tconnections.push(Array(child.v, parent.v, \"frig\", node.id));\n\t\t\telse if (node.life == \"Critical\")\n\t\t\t\tconnections.push(Array(child.v, parent.v, \"eol\", node.id));\n\t\t\telse if (node.mass == \"Critical\")\n\t\t\t\tconnections.push(Array(child.v, parent.v, \"critical\", node.id));\n\t\t\telse if (node.mass == \"Destab\")\n\t\t\t\tconnections.push(Array(child.v, parent.v, \"destab\", node.id));\n\t\t\telse if (node.life == \"Gate\" || node.parent.type == \"GATE\" || node.child.type == \"GATE\")\n\t\t\t\tconnections.push(Array(child.v, parent.v, \"gate\", node.id));\n\t\t\t//else\n\t\t\t//\tconnections.push(Array(child.v, parent.v, \"\", node.id));\n\t\t}\n\n\t\t// Apply critical/destab line colors\n\t\tconnections.reverse(); // so we apply to outer systems first\n\n\t\t//this.data.map = chain;\n\t\t//this.data.lines = connections;\n\t\treturn {\"map\": chain, \"lines\": connections};\n\t}\n\n\tthis.redraw = function() {\n\t\tvar data = $.extend(true, {}, this.data);\n\t\tdata.map = $.extend(true, {}, data.rawMap);\n\n\t\tthis.draw(data);\n\t}\n\n\tthis.draw = function(data) {\n\t\tvar data = typeof(data) !== \"undefined\" ? data : {};\n\t\t//var startTime = window.performance.now();\n\n\t\tif (data.map) {\n\t\t\tthis.drawing = true;\n\n\t\t\tthis.data.rawMap = $.extend(true, {}, data.map);\n\n\t\t\tif (options.chain.active == null || (options.chain.tabs[options.chain.active] && options.chain.tabs[options.chain.active].evescout == false)) {\n\t\t\t\tif (options.masks.active != \"273.0\") {\n\t\t\t\t\tfor (var i in data.map) {\n\t\t\t\t\t\tif (data.map[i].mask == \"273.0\") {\n\t\t\t\t\t\t\tdelete data.map[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Sort so we keep the chain map order the same\n\t\t\tObject.sort(data.map, \"id\");\n\n\t\t\t$.extend(data, this.nodes(data.map)); // 250ms -> <100ms\n\t\t\t$.extend(this.data, data);\n\t\t\tthis.map.draw(this.newView(data.map), this.options); // 150ms\n\n\t\t\tif (options.chain.tabs[options.chain.active]) {\n\t\t\t\tfor (var x in options.chain.tabs[options.chain.active].collapsed) {\n\t\t\t\t\tvar node = $(\"#chainMap [data-nodeid='\"+options.chain.tabs[options.chain.active].collapsed[x]+\"']\").attr(\"id\");\n\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\tnode = node.split(\"node\")[1];\n\t\t\t\t\t\tthis.map.collapse(node - 1, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.lines(data); // 300ms\n\t\t\tthis.grid(); // 4ms\n\n\t\t\t// Apply current system style\n\t\t\t$(\"#chainMap [data-nodeid='\"+viewingSystemID+\"']\").parent().addClass(\"currentNode\"); // 1ms\n\n\t\t\tWormholeTypeToolTips.attach($(\"#chainMap .whEffect\")); // 30ms\n\t\t\tthis.drawing = false;\n\t\t}\n\n\t\tif (data.activity) // 100ms\n\t\t\tthis.data.activity = this.activity(data.activity);\n\n\t\tif (data.occupied) // 3ms\n\t\t\tthis.data.occupied = this.occupied(data.occupied);\n\n\t\tif (data.flares) // 20ms\n\t\t\tthis.data.flares = this.flares(data.flares);\n\n\t\tif (data.last_modified)\n\t\t\tthis.data.last_modified = data.last_modified;\n\n\t\t//console.log(\"stint: \"+ (window.performance.now() - startTime));\n\t}\n\n\tthis.collapse = function(c) {\n\t\tif (chain.drawing) return false;\n\n\t\tvar collapsed = chain.map.getCollapsedNodes();\n\t\toptions.chain.tabs[options.chain.active].collapsed = [];\n\t\tfor (x in collapsed) {\n\t\t\tvar systemID = $(\"#chainMap #node\"+(collapsed[x] +1)).data(\"nodeid\");\n\t\t\toptions.chain.tabs[options.chain.active].collapsed.push(systemID);\n\t\t}\n\n\t\tchain.lines(chain.data);\n\n\t\t// Apply current system style\n\t\t$(\"#chainMap [data-nodeid='\"+viewingSystemID+\"']\").parent().addClass(\"currentNode\");\n\n\t\tWormholeTypeToolTips.attach($(\"#chainMap .whEffect\"));\n\n\t\tchain.activity(chain.data.activity);\n\n\t\tchain.occupied(chain.data.occupied);\n\n\t\tchain.flares(chain.data.flares);\n\n\t\tchain.grid();\n\n\t\toptions.save();\n\t}\n\n\tthis.init = function() {\n\t\tthis.map = new google.visualization.OrgChart(document.getElementById(\"chainMap\"));\n\t\tthis.options = {allowHtml: true, allowCollapse: true, size: \"medium\", nodeClass: \"node\"};\n\n\t\tgoogle.visualization.events.addListener(this.map, \"collapse\", this.collapse);\n\n\t\tthis.map.draw(new google.visualization.DataView(new google.visualization.DataTable({cols:[{label: \"System\", type: \"string\"}, {label: \"Parent\", type: \"string\"}]})), this.options);\n\t}\n\n\t//google.setOnLoadCallback(this.init());\n\tthis.init();\n}\n","var CKConfig = {\n\tskin: \"custom\",\n\theight: 100,\n\tallowedContent: true,\n\textraPlugins: \"toolbarswitch,autogrow,autolink\",\n\tenterMode: CKEDITOR.ENTER_BR,\n\tremoveDialogTabs: 'link:advanced',\n\tautoGrow_onStartup: true,\n\tautoGrow_minHeight: 100,\n\ttoolbar_minToolbar: [\n\t\t{name: \"basicstyles\", items: [\"Bold\", \"Italic\", \"Underline\", \"Strike\"]},\n\t\t{name: \"paragraph\", items: [\"BulletedList\", \"Outdent\", \"Indent\"]},\n\t\t{name: \"links\", items: [\"Link\"]},\n\t\t{name: \"colors\", items: [\"TextColor\", \"BGColor\"]},\n\t\t{name: \"styles\", items: [\"FontSize\"]},\n\t\t{name: \"tools\", items: [\"Toolbarswitch\"]}\n\t],\n\ttoolbar_maxToolbar: [\n\t\t{name: \"basicstyles\", items: [\"Bold\", \"Italic\", \"Underline\", \"Strike\", \"Subscript\", \"Superscript\"]},\n\t\t{name: \"paragraph\", items: [\"NumberedList\", \"BulletedList\", \"Outdent\", \"Indent\"]},\n\t\t{name: \"links\", items: [\"Link\"]},\n\t\t{name: \"colors\", items: [\"TextColor\", \"BGColor\"]},\n\t\t{name: \"styles\", items: [\"FontSize\", \"Font\"]},\n\t\t{name: \"tools\", items: [\"Source\", \"Toolbarswitch\"]}\n\t],\n\ttoolbar: \"minToolbar\",\n\tsmallToolbar: \"minToolbar\",\n\tmaximizedToolbar: \"maxToolbar\",\n\tfontSize_style: {\n\t    element:        'span',\n\t    styles:         { 'font-size': '#(size)' },\n\t    overrides:      [ { element :'font', attributes: { 'size': null } } ]\n\t}\n}\n\nCKEDITOR.on(\"instanceLoaded\", function(cke) {\n\tcke.editor.on(\"contentDom\", function() {\n\t\tcke.editor.on(\"key\", function(e) {\n\t\t\tif (e.data.keyCode == 27) {\n\t\t\t\t// escape key cancels\n\t\t\t\t$(cke.editor.element.$).closest(\".comment\").find(\".commentCancel\").click();\n\t\t\t\treturn false;\n\t\t\t} else if (e.data.domEvent.$.altKey && e.data.domEvent.$.keyCode == 83) {\n\t\t\t\t// alt+s saves\n\t\t\t\t$(cke.editor.element.$).closest(\".comment\").find(\".commentSave\").click();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t});\n\n\t$(\".cke_combo__font a\")\n\t\t.removeClass(\"cke_combo_button\")\n\t\t.addClass(\"cke_button cke_button_off\")\n\t\t.html('<span class=\"cke_button_icon\">&nbsp;</span>')\n\n\t$(\".cke_combo__fontsize a\")\n\t\t.removeClass(\"cke_combo_button\")\n\t\t.addClass(\"cke_button cke_button_off\")\n\t\t.html('<span class=\"cke_button_icon\">&nbsp;</span>')\n});\n\nCKEDITOR.on(\"instanceReady\", function(cke) {\n\t// ensure focus on init\n\tcke.editor.focus();\n\n\tvar s = cke.editor.getSelection(); // getting selection\n\tvar selected_ranges = s.getRanges(); // getting ranges\n\tvar node = selected_ranges[0].startContainer; // selecting the starting node\n\tvar parents = node.getParents(true);\n\n\tnode = parents[parents.length - 2].getFirst();\n\n\tif (!node) return false;\n\n\twhile (true) {\n\t\tvar x = node.getNext();\n\t\tif (x == null) {\n\t\t\tbreak;\n\t\t}\n\t\tnode = x;\n\t}\n\n\ts.selectElement(node);\n\tselected_ranges = s.getRanges();\n\tselected_ranges[0].collapse(false);  //  false collapses the range to the end of the selected node, true before the node.\n\ts.selectRanges(selected_ranges);  // putting the current selection there\n});\n\nCKEDITOR.on(\"dialogDefinition\", function(ev) {\n\tif (ev.data.name == 'link') {\n\t\tev.data.definition.getContents('target').get('linkTargetType')['default'] = '_blank';\n\t}\n});\n","$(\"body\").on(\"dblclick\", \".comment\", function(e) {\n\te.preventDefault();\n\tdocument.getSelection().removeAllRanges();\n\t$(this).find(\".commentEdit\").click();\n})\n\n$(\"body\").on(\"click\", \".commentEdit\", function(e) {\n\te.preventDefault();\n\n\t// Prevent multiple editors\n\tif ($(\".cke\").length) return false;\n\n\tvar $comment = $(this).closest(\".comment\");\n\n\t$comment.find(\".commentToolbar\").hide();\n\n\tCKEDITOR.replace($comment.find(\".commentBody\").attr(\"id\"), CKConfig).on(\"instanceReady\", function() {\n\t\t$comment.find(\".commentStatus\").html(\"\");\n\t\t$comment.find(\".commentFooter\").show();\n\t\t$comment.find(\".commentFooter .commentControls\").show();\n\t});\n\n\ttripwire.activity.editComment = $comment.data(\"id\");\n\ttripwire.refresh('refresh');\n});\n\n$(\"body\").on(\"click\", \".commentSave, .commentCancel\", function(e) {\n\te.preventDefault();\n\tvar $this = $(this);\n\tif ($this.attr(\"disabled\")) return false;\n\n\tvar $comment = $this.closest(\".comment\");\n\t$this.attr(\"disabled\", \"true\");\n\n\tif ($this.hasClass(\"commentSave\")) {\n\t\tvar data = {\"mode\": \"save\", \"commentID\": $comment.data(\"id\"), \"systemID\": $comment.find(\".commentSticky\").hasClass(\"active\") ? 0 : viewingSystemID, \"comment\": CKEDITOR.instances[$comment.find(\".commentBody\").attr(\"id\")].getData()};\n\n\t\t$.ajax({\n\t\t\turl: \"comments.php\",\n\t\t\ttype: \"POST\",\n\t\t\tdata: data,\n\t\t\tdataType: \"JSON\"\n\t\t}).done(function(data) {\n\t\t\tif (data && data.result == true) {\n\t\t\t\t$comment.find(\".commentModified\").html(\"Edited by \" + data.comment.modifiedBy + \" at \" + data.comment.modifiedDate);\n\t\t\t\t$comment.find(\".commentCreated\").html(\"Posted by \" + data.comment.createdBy + \" at \" + data.comment.createdDate);\n\t\t\t\tTooltips.attach($comment.find(\"[data-tooltip]\"));\n\n\t\t\t\tCKEDITOR.instances[$comment.find(\".commentBody\").attr(\"id\")].destroy(false);\n\t\t\t\t$comment.attr(\"data-id\", data.comment.id);\n\t\t\t\t$comment.find(\".commentToolbar\").show();\n\t\t\t\t$comment.find(\".commentFooter\").hide();\n\t\t\t\t$this.removeAttr(\"disabled\");\n\t\t\t}\n\t\t});\n\t} else {\n\t\tCKEDITOR.instances[$comment.find(\".commentBody\").attr(\"id\")].destroy(true);\n\n\t\tif (!$comment.attr(\"data-id\")) {\n\t\t\t$comment.remove();\n\t\t} else {\n\t\t\t$comment.find(\".commentToolbar\").show();\n\t\t\t$comment.find(\".commentFooter\").hide();\n\t\t\t$this.removeAttr(\"disabled\");\n\t\t}\n\t}\n\n\t$comment.find(\".commentStatus\").html(\"\");\n\n\tdelete tripwire.activity.editComment;\n\ttripwire.refresh('refresh');\n});\n\n$(\"body\").on(\"click\", \".commentDelete\", function(e) {\n\te.preventDefault();\n\tvar $comment = $(this).closest(\".comment\");\n\n\t// check if dialog is open\n\tif (!$(\"#dialog-deleteComment\").hasClass(\"ui-dialog-content\")) {\n\t\t$(\"#dialog-deleteComment\").data(\"comment\", $comment).dialog({\n\t\t\tresizable: false,\n\t\t\tminHeight: 0,\n\t\t\tposition: {my: \"center\", at: \"center\", of: $(\"#notesWidget\")},\n\t\t\tdialogClass: \"dialog-noeffect ui-dialog-shadow\",\n\t\t\tbuttons: {\n\t\t\t\tDelete: function() {\n\t\t\t\t\t// Prevent duplicate submitting\n\t\t\t\t\t$(\"#dialog-deleteComment\").parent().find(\":button:contains('Delete')\").button(\"disable\");\n\n\t\t\t\t\tvar $comment = $(this).data(\"comment\");\n\t\t\t\t\tvar data = {\"mode\": \"delete\", \"commentID\": $comment.data(\"id\")};\n\n\t\t\t\t\t$.ajax({\n\t\t\t\t\t\turl: \"comments.php\",\n\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t}).done(function(data) {\n\t\t\t\t\t\tif (data && data.result == true) {\n\t\t\t\t\t\t\t$(\"#dialog-deleteComment\").dialog(\"close\");\n\t\t\t\t\t\t\t$comment.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t}).always(function() {\n\t\t\t\t\t\t$(\"#dialog-deleteComment\").parent().find(\":button:contains('Delete')\").button(\"enable\");\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tCancel: function() {\n\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} else if (!$(\"#dialog-deleteComment\").dialog(\"isOpen\")) {\n\t\t$(\"#dialog-deleteComment\").data(\"comment\", $comment).dialog(\"open\");\n\t}\n});\n\n$(\"body\").on(\"click\", \"#add-comment\", function(e) {\n\te.preventDefault();\n\n\t// Prevent multiple editors\n\tif ($(\".cke\").length) return false;\n\n\tvar $comment = $(\".comment:last\").clone();\n\tvar commentID = $(\".comment:visible:last .commentBody\").attr(\"id\") ? $(\".comment:visible:last .commentBody\").attr(\"id\").replace(\"comment\", \"\") + 1 : 0;\n\t$(\".comment:last\").before($comment);\n\n\t$comment.find(\".commentBody\").attr(\"id\", \"comment\" + commentID);\n\t$comment.removeClass(\"hidden\").find(\".commentEdit\").click();\n});\n\n$(\"body\").on(\"click\", \".commentSticky\", function(e) {\n\te.preventDefault();\n\tvar $comment = $(this).closest(\".comment\");\n\n\tvar data = {\"mode\": \"sticky\", \"commentID\": $comment.data(\"id\"), \"systemID\": $comment.find(\".commentSticky\").hasClass(\"active\") ? viewingSystemID : 0};\n\n\t$.ajax({\n\t\turl: \"comments.php\",\n\t\ttype: \"POST\",\n\t\tdata: data,\n\t\tdataType: \"JSON\"\n\t}).done(function(data) {\n\t\tif (data && data.result == true) {\n\t\t\t$comment.find(\".commentSticky\").hasClass(\"active\") ? $comment.find(\".commentSticky\").removeClass(\"active\") : $comment.find(\".commentSticky\").addClass(\"active\");\n\t\t}\n\t});\n});\n","if (window.location.href.indexOf(\"galileo\") != -1) {\n\tNotify.trigger(\"This is the test version of Tripwire.<br/>Please use <a href='https://tripwire.cloud-things.com'>Tripwire</a>\")\n}\n\n$(\"body\").on(\"click\", \"a[href^='.?system=']\", function(e) {\n\te.preventDefault();\n\n\tvar system = $(this).attr(\"href\").replace(\".?system=\", \"\");\n\tvar systemID = Object.index(tripwire.systems, \"name\", system);\n\n\ttripwire.systemChange(systemID);\n});\n\n$(\"body\").on(\"submit\", \"#systemSearch\", function(e) {\n\te.preventDefault();\n\n\tvar system = $(this).find(\"[name='system']\").val();\n\tvar systemID = Object.index(tripwire.systems, \"name\", system) || false;\n\n\tif (systemID !== false) {\n\t\ttripwire.systemChange(systemID);\n\t\t$(this).find(\"[name='system']\").val(\"\");\n\t\t$(\"#search\").click();\n\t}\n});\n\n$(\"body\").on(\"click\", \"#undo:not(.disabled)\", function() {\n\ttripwire.undo();\n});\n\n$(\"body\").on(\"click\", \"#redo:not(.disabled)\", function() {\n\ttripwire.redo();\n});\n\n$(document).keydown(function(e)\t{\n\tif ((e.metaKey || e.ctrlKey) && (e.keyCode == 89 || e.keyCode == 90)) {\n\t\t//Abort - user is in input or textarea\n\t\tif ($(document.activeElement).is(\"textarea, input\")) return;\n\n\t\te.preventDefault();\n\n\t\tif (e.keyCode == 89 && !$(\"#redo\").hasClass(\"disabled\")) {\n\t\t\t$(\"#redo\").click();\n\t\t\tNotify.trigger(\"Redoing last undo\");\n\t\t} else if (e.keyCode == 90 && !$(\"#undo\").hasClass(\"disabled\")) {\n\t\t\t$(\"#undo\").click();\n\t\t\tNotify.trigger(\"Undoing last action\");\n\t\t}\n\t}\n});\n","$(\"#admin\").click(function(e) {\n\te.preventDefault();\n\n\tif ($(this).hasClass(\"disabled\")) {\n\t\treturn false;\n\t}\n\n\tif (!$(\"#dialog-admin\").hasClass(\"ui-dialog-content\")) {\n\t\tvar refreshTimer = null;\n\t\tvar $total = null;\n\t\tvar $ajax = null;\n\n\t\tfunction refreshWindow() {\n\t\t\tif ($ajax) $ajax.abort();\n\t\t\t$total.html(\"Total: \" + $(\"#dialog-admin .window .hasFocus table tr[data-id]\").length);\n\n\t\t\t$ajax = $.ajax({\n\t\t\t\turl: \"admin.php\",\n\t\t\t\ttype: \"POST\",\n\t\t\t\tdata: {mode: $(\"#dialog-admin .menu .active\").attr(\"data-window\")},\n\t\t\t\tdataType: \"JSON\"\n\t\t\t}).done(function(data) {\n\t\t\t\tif (data && data.results) {\n\t\t\t\t\tvar rows = data.results;\n\t\t\t\t\tvar ids = [];\n\n\t\t\t\t\tfor (var i = 0, l = rows.length; i < l; i++) {\n\t\t\t\t\t\tvar $row = $(\"#dialog-admin .window .hasFocus tbody tr[data-id='\"+ rows[i].id +\"']\");\n\t\t\t\t\t\tids.push(rows[i].id);\n\n\t\t\t\t\t\tif ($row.length) {\n\t\t\t\t\t\t\tfor (col in rows[i]) {\n\t\t\t\t\t\t\t\tvar $col = $row.find(\"[data-col='\"+col+\"']\");\n\t\t\t\t\t\t\t\t$col.html(($col.attr(\"data-format\") == \"number\" ? numFormat(rows[i][col]) : rows[i][col]) || \"&nbsp;\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$row = $(\"#dialog-admin .window .hasFocus table tr.hidden\").clone();\n\t\t\t\t\t\t\t$row.attr(\"data-id\", rows[i].id);\n\n\t\t\t\t\t\t\tfor (col in rows[i]) {\n\t\t\t\t\t\t\t\tvar $col = $row.find(\"[data-col='\"+col+\"']\");\n\t\t\t\t\t\t\t\t$col.html(($col.attr(\"data-format\") == \"number\" ? numFormat(rows[i][col]) : rows[i][col]) || \"&nbsp;\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$row.removeClass(\"hidden\");\n\n\t\t\t\t\t\t\t$(\"#dialog-admin .window .hasFocus tbody\").append($row);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$(\"#dialog-admin .window .hasFocus table tr[data-id]\").each(function() {\n\t\t\t\t\t\tif ($.inArray($(this).data(\"id\").toString(), ids) == -1) {\n\t\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t$(\"#dialog-admin .window .hasFocus table\").trigger(\"update\", [true]);\n\t\t\t\t} else {\n\t\t\t\t\t$(\"#dialog-admin .window .hasFocus table tr[data-id]\").remove();\n\t\t\t\t}\n\n\t\t\t\t$total.html(\"Total: \" + $(\"#dialog-admin .window .hasFocus table tr[data-id]\").length);\n\t\t\t});\n\n\t\t\tif ($(\"#dialog-admin\").dialog(\"isOpen\") && $(\"#dialog-admin .menu .active\").attr(\"data-refresh\")) {\n\t\t\t\trefreshTimer = setTimeout(refreshWindow, $(\"#dialog-admin .menu .active\").attr(\"data-refresh\"));\n\t\t\t}\n\t\t}\n\n\t\t$(\"#dialog-admin\").dialog({\n\t\t\tautoOpen: true,\n\t\t\tmodal: true,\n\t\t\theight: 350,\n\t\t\twidth: 800,\n\t\t\tbuttons: {\n\t\t\t\tClose: function() {\n\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t}\n\t\t\t},\n\t\t\tcreate: function() {\n\t\t\t\t// menu toggle\n\t\t\t\t$(\"#dialog-admin\").on(\"click\", \".menu li\", function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\t$menuItem = $(this);\n\t\t\t\t\tclearTimeout(refreshTimer);\n\n\t\t\t\t\t$(\"#dialog-admin .menu .active\").removeClass(\"active\");\n\t\t\t\t\t$menuItem.addClass(\"active\");\n\t\t\t\t\t$(\"div.ui-dialog[aria-describedby='dialog-admin'] .ui-dialog-traypane\").html(\"\");\n\n\t\t\t\t\t$(\"#dialog-admin .window [data-window]\").removeClass(\"hasFocus\").hide();\n\t\t\t\t\t$(\"#dialog-admin .window [data-window='\"+ $menuItem.data(\"window\") +\"']\").addClass(\"hasFocus\").show();\n\n\t\t\t\t\trefreshWindow();\n\t\t\t\t});\n\n\t\t\t\t$(\"#dialog-admin [data-sortable='true']\").tablesorter({\n\t\t\t\t\tsortReset: true,\n\t\t\t\t\twidgets: ['saveSort'],\n\t\t\t\t\tsortList: [[0,0]]\n\t\t\t\t});\n\n\t\t\t\t// dialog bottom tray\n\t\t\t\t$($(this)[0].parentElement).find(\".ui-dialog-buttonpane\").append(\"<div class='ui-dialog-traypane'></div>\");\n\t\t\t\t$total = $(\"div.ui-dialog[aria-describedby='dialog-admin'] .ui-dialog-traypane\");\n\t\t\t},\n\t\t\topen: function() {\n\t\t\t\t$menuItem = $(\"#dialog-admin .menu li.active\");\n\t\t\t\trefreshWindow();\n\t\t\t},\n\t\t\tclose: function() {\n\t\t\t\tclearTimeout(refreshTimer);\n\t\t\t}\n\t\t});\n\t} else if (!$(\"#dialog-admin\").dialog(\"isOpen\")) {\n\t\t$(\"#dialog-admin\").dialog(\"open\");\n\t}\n});\n","$(\".options\").click(function(e) {\n\te.preventDefault();\n\n\tif ($(this).hasClass(\"disabled\"))\n\t\treturn false;\n\n\t$(\"#dialog-options\").dialog({\n\t\tautoOpen: false,\n\t\twidth: 450,\n\t\tminHeight: 400,\n\t\tmodal: true,\n\t\tbuttons: {\n\t\t\tSave: function() {\n\t\t\t\t// Options\n\t\t\t\tvar data = {mode: \"set\", options: JSON.stringify(options)};\n\t\t\t\tvar maskChange = false;\n\n\t\t\t\t$(\"#dialog-options\").parent().find(\".ui-dialog-buttonpane button:contains('Save')\").attr(\"disabled\", true).addClass(\"ui-state-disabled\");\n\n\t\t\t\toptions.chain.typeFormat = $(\"#dialog-options #typeFormat\").val();\n\t\t\t\toptions.chain.classFormat = $(\"#dialog-options #classFormat\").val();\n\n\t\t\t\toptions.chain.gridlines = JSON.parse($(\"#dialog-options input[name=gridlines]:checked\").val());\n\n\t\t\t\toptions.chain[\"node-reference\"] = $(\"#dialog-options input[name=node-reference]:checked\").val();\n\n\t\t\t\toptions.signatures.pasteLife = $(\"#dialog-options #pasteLife\").val();\n\n\t\t\t\toptions.background = $(\"#dialog-options #background-image\").val();\n\n\t\t\t\tif (options.masks.active != $(\"#dialog-options input[name='mask']:checked\").val()) {\n\t\t\t\t\tmaskChange = true;\n\t\t\t\t}\n\n\t\t\t\toptions.masks.active = $(\"#dialog-options input[name='mask']:checked\").val();\n\n\t\t\t\toptions.apply();\n\t\t\t\toptions.save() // Performs AJAX\n\t\t\t\t\t.done(function() {\n\t\t\t\t\t\tif (maskChange) {\n\t\t\t\t\t\t\t// Reset signatures\n\t\t\t\t\t\t\t$(\"#sigTable span[data-age]\").countdown(\"destroy\");\n\t\t\t\t\t\t\t$(\"#sigTable tbody\").empty()\n\t\t\t\t\t\t\t$(\"#signature-count\").html(0);\n\t\t\t\t\t\t\ttripwire.signatures.list = {};\n\t\t\t\t\t\t\ttripwire.client.signatures = [];\n\n\t\t\t\t\t\t\ttripwire.refresh('change');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\n\t\t\t\t$(\"#dialog-options\").dialog(\"close\");\n\t\t\t\t$(\"#dialog-options\").parent().find(\".ui-dialog-buttonpane button:contains('Save')\").attr(\"disabled\", false).removeClass(\"ui-state-disabled\");\n\n\t\t\t\t// toggle mask admin icon\n\t\t\t\t$(\"#dialog-options input[name='mask']:checked\").data(\"admin\") ? $(\"#admin\").removeClass(\"disabled\") : $(\"#admin\").addClass(\"disabled\");\n\t\t\t},\n\t\t\tReset: function() {\n\t\t\t\t$(\"#dialog-confirm #msg\").html(\"Settings will be reset to defaults temporarily.<br/><br/><p><em>Save settings to make changes permanent.</em></p>\");\n\t\t\t\t$(\"#dialog-confirm\").dialog(\"option\", {\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\tReset: function() {\n\t\t\t\t\t\t\toptions.reset();\n\t\t\t\t\t\t\toptions.apply();\n\n\t\t\t\t\t\t\t$(\"#dialog-options\").dialog(\"close\");\n\t\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t\t},\n\t\t\t\t\t\tCancel: function() {\n\t\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}).dialog(\"open\");\n\t\t\t},\n\t\t\tClose: function() {\n\t\t\t\t$(this).dialog(\"close\");\n\t\t\t}\n\t\t},\n\t\topen: function() {\n\t\t\t// Get user stats data\n\t\t\t$.ajax({\n\t\t\t\turl: \"user_stats.php\",\n\t\t\t\ttype: \"POST\",\n\t\t\t\tdataType: \"JSON\"\n\t\t\t}).done(function(data) {\n\t\t\t\tfor (stat in data) {\n\t\t\t\t\t$(\"#\"+stat).text(data[stat]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Get masks\n\t\t\t$.ajax({\n\t\t\t\turl: \"masks.php\",\n\t\t\t\ttype: \"POST\",\n\t\t\t\tdataType: \"JSON\"\n\t\t\t}).done(function(response) {\n\t\t\t\tif (response && response.masks) {\n\t\t\t\t\t$(\"#dialog-options #masks #default\").html(\"\");\n\t\t\t\t\t$(\"#dialog-options #masks #personal\").html(\"\");\n\t\t\t\t\t$(\"#dialog-options #masks #corporate\").html(\"\");\n\n\t\t\t\t\tfor (var x in response.masks) {\n\t\t\t\t\t\tvar mask = response.masks[x];\n\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t+ '<input type=\"radio\" name=\"mask\" id=\"mask'+x+'\" value=\"'+mask.mask+'\" class=\"selector\" data-owner=\"'+mask.owner+'\" data-admin=\"'+mask.admin+'\" />'\n\t\t\t\t\t\t\t+ '<label for=\"mask'+x+'\"><img src=\"'+mask.img+'\" />'\n\t\t\t\t\t\t\t+  (mask.optional ? '<i class=\"closeIcon\" onclick=\"return false;\" data-icon=\"red-giant\"><i data-icon=\"times\"></i></i>' : '')\n\t\t\t\t\t\t\t+ '<span class=\"selector_label\">'+mask.label+'</span></label>');\n\n\t\t\t\t\t\t$(\"#dialog-options #masks #\"+mask.type).append(node);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t+ '<input type=\"checkbox\" name=\"find\" id=\"findp\" value=\"personal\" class=\"selector\" disabled=\"disabled\" />'\n\t\t\t\t\t\t+ '<label for=\"findp\"><i data-icon=\"search\" style=\"font-size: 3em; margin-left: 16px; margin-top: 16px; display: block;\"></i></label>');\n\t\t\t\t\t$(\"#dialog-options #masks #personal\").append(node);\n\n\t\t\t\t\tif (init.admin == \"1\") {\n\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t+ '<input type=\"checkbox\" name=\"find\" id=\"findc\" value=\"corporate\" class=\"selector\" disabled=\"disabled\" />'\n\t\t\t\t\t\t\t+ '<label for=\"findc\"><i data-icon=\"search\" style=\"font-size: 3em; margin-left: 16px; margin-top: 16px; display: block;\"></i></label>');\n\t\t\t\t\t\t$(\"#dialog-options #masks #corporate\").append(node);\n\t\t\t\t\t}\n\n\t\t\t\t\t$(\"#dialog-options input[name='mask']\").filter(\"[value='\"+response.masks[response.active].mask+\"']\").attr(\"checked\", true).trigger(\"change\");\n\n\t\t\t\t\t// toggle mask admin icon\n\t\t\t\t\tresponse.masks[response.active].admin ? $(\"#admin\").removeClass(\"disabled\") : $(\"#admin\").addClass(\"disabled\");\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(\"#dialog-options #pasteLife\").val(options.signatures.pasteLife);\n\t\t\t$(\"#dialog-options #typeFormat\").val(options.chain.typeFormat);\n\t\t\t$(\"#dialog-options #classFormat\").val(options.chain.classFormat);\n\t\t\t$(\"#dialog-options input[name='node-reference'][value='\"+options.chain[\"node-reference\"]+\"']\").prop(\"checked\", true);\n\t\t\t$(\"#dialog-options input[name='gridlines'][value='\"+options.chain.gridlines+\"']\").prop(\"checked\", true);\n\t\t\t$(\"#dialog-options #background-image\").val(options.background);\n\t\t},\n\t\tcreate: function() {\n\t\t\t$(\"#optionsAccordion\").accordion({heightStyle: \"content\", collapsible: true, active: false});\n\n\t\t\t$(\"#dialog-pwChange\").dialog({\n\t\t\t\tautoOpen: false,\n\t\t\t\tresizable: false,\n\t\t\t\tminHeight: 0,\n\t\t\t\tdialogClass: \"ui-dialog-shadow dialog-noeffect dialog-modal\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tSave: function() {\n\t\t\t\t\t\t$(\"#pwForm\").submit();\n\t\t\t\t\t},\n\t\t\t\t\tCancel: function() {\n\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tclose: function() {\n\t\t\t\t\t$(\"#pwForm input[name='password'], #pwForm input[name='confirm']\").val(\"\");\n\t\t\t\t\t$(\"#pwError\").text(\"\").hide();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(\"#pwChange\").click(function() {\n\t\t\t\t$(\"#dialog-pwChange\").dialog(\"open\");\n\t\t\t});\n\n\t\t\t$(\"#pwForm\").submit(function(e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\t$(\"#pwError\").text(\"\").hide();\n\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: \"options.php\",\n\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\tdata: $(this).serialize(),\n\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t}).done(function(response) {\n\t\t\t\t\tif (response && response.result) {\n\t\t\t\t\t\t$(\"#dialog-msg #msg\").text(\"Password changed\");\n\t\t\t\t\t\t$(\"#dialog-msg\").dialog(\"open\");\n\n\t\t\t\t\t\t$(\"#dialog-pwChange\").dialog(\"close\");\n\t\t\t\t\t} else if (response && response.error) {\n\t\t\t\t\t\t$(\"#pwError\").text(response.error).show(\"slide\", {direction: \"up\"});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$(\"#pwError\").text(\"Unknown error\").show(\"slide\", {direction: \"up\"});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t$(\"#dialog-usernameChange\").dialog({\n\t\t\t\tautoOpen: false,\n\t\t\t\tresizable: false,\n\t\t\t\tminHeight: 0,\n\t\t\t\tdialogClass: \"ui-dialog-shadow dialog-noeffect dialog-modal\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tSave: function() {\n\t\t\t\t\t\t$(\"#usernameForm\").submit();\n\t\t\t\t\t},\n\t\t\t\t\tCancel: function() {\n\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\topen: function() {\n\t\t\t\t\t$(\"#usernameForm #username\").html($(\"#dialog-options #username\").html());\n\t\t\t\t},\n\t\t\t\tclose: function() {\n\t\t\t\t\t$(\"#usernameForm [name='username']\").val(\"\");\n\t\t\t\t\t$(\"#usernameError\").text(\"\").hide();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(\"#usernameChange\").click(function() {\n\t\t\t\t$(\"#dialog-usernameChange\").dialog(\"open\");\n\t\t\t});\n\n\t\t\t$(\"#usernameForm\").submit(function(e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\t$(\"#usernameError\").text(\"\").hide();\n\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: \"options.php\",\n\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\tdata: $(this).serialize(),\n\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t}).done(function(response) {\n\t\t\t\t\tif (response && response.result) {\n\t\t\t\t\t\t$(\"#dialog-msg #msg\").text(\"Username changed\");\n\t\t\t\t\t\t$(\"#dialog-msg\").dialog(\"open\");\n\n\t\t\t\t\t\t$(\"#dialog-options #username\").html(response.result);\n\n\t\t\t\t\t\t$(\"#dialog-usernameChange\").dialog(\"close\");\n\t\t\t\t\t} else if (response && response.error) {\n\t\t\t\t\t\t$(\"#usernameError\").text(response.error).show(\"slide\", {direction: \"up\"});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$(\"#usernameError\").text(\"Unknown error\").show(\"slide\", {direction: \"up\"});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Mask selections\n\t\t\t$(\"#masks\").on(\"change\", \"input.selector:checked\", function() {\n\t\t\t\tif ($(this).data(\"owner\")) {\n\t\t\t\t\t$(\"#maskControls #edit\").removeAttr(\"disabled\");\n\t\t\t\t\t$(\"#maskControls #delete\").removeAttr(\"disabled\");\n\t\t\t\t} else {\n\t\t\t\t\t$(\"#maskControls #edit\").attr(\"disabled\", \"disabled\");\n\t\t\t\t\t$(\"#maskControls #delete\").attr(\"disabled\", \"disabled\");\n\t\t\t\t}\n\n\t\t\t\tif ($(this).val() != 0.0 && $(this).val().split(\".\")[1] == 0) {\n\t\t\t\t\t$(\"#dialog-options #leave\").removeAttr(\"disabled\");\n\t\t\t\t} else {\n\t\t\t\t\t$(\"#dialog-options #leave\").attr(\"disabled\", \"disabled\");\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Mask join\n\t\t\t$(\"#dialog-joinMask\").dialog({\n\t\t\t\tautoOpen: false,\n\t\t\t\tresizable: false,\n\t\t\t\tdialogClass: \"ui-dialog-shadow dialog-noeffect dialog-modal\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tAdd: function() {\n\t\t\t\t\t\tvar mask = $(\"#dialog-joinMask #results input:checked\");\n\t\t\t\t\t\tvar label = $(\"#dialog-joinMask #results input:checked+label\");\n\n\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\turl: \"masks.php\",\n\t\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\t\tdata: {mask: mask.val(), mode: \"join\"},\n\t\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\t\tif (response && response.result) {\n\t\t\t\t\t\t\t\tlabel.css(\"width\", \"\");\n\t\t\t\t\t\t\t\tlabel.find(\".info\").remove();\n\t\t\t\t\t\t\t\tlabel.append('<i class=\"closeIcon\" onclick=\"return false;\" data-icon=\"red-giant\"><i data-icon=\"times\"></i></i>');\n\n\t\t\t\t\t\t\t\t$(\"#dialog-options #masks #\"+response.type+\" input.selector:last\").before(mask).before(label);\n\t\t\t\t\t\t\t\t$(\"#dialog-joinMask\").dialog(\"close\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tCancel: function() {\n\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcreate: function() {\n\t\t\t\t\t$(\"#dialog-joinMask form\").submit(function(e) {\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t$(\"#dialog-joinMask #results\").html(\"\");\n\t\t\t\t\t\t$(\"#dialog-joinMask #loading\").show();\n\t\t\t\t\t\t$(\"#dialog-joinMask input[type='submit']\").attr(\"disabled\", \"disabled\");\n\n\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\turl: \"masks.php\",\n\t\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\t\tdata: $(this).serialize(),\n\t\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\t\tif (response && response.results) {\n\t\t\t\t\t\t\t\tfor (var x in response.results) {\n\t\t\t\t\t\t\t\t\tvar mask = response.results[x];\n\t\t\t\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t\t\t\t+ '<input type=\"radio\" name=\"mask\" id=\"mask'+mask.mask+'\" value=\"'+mask.mask+'\" class=\"selector\" data-owner=\"false\" data-admin=\"'+mask.admin+'\" />'\n\t\t\t\t\t\t\t\t\t\t+ '<label for=\"mask'+mask.mask+'\" style=\"width: 100%; margin-left: -5px;\">'\n\t\t\t\t\t\t\t\t\t\t+ '\t<img src=\"'+mask.img+'\" />'\n\t\t\t\t\t\t\t\t\t\t+ '\t<span class=\"selector_label\">'+mask.label+'</span>'\n\t\t\t\t\t\t\t\t\t\t+ '\t<div class=\"info\">'\n\t\t\t\t\t\t\t\t\t\t+ '\t\t'+(mask.characterName ? mask.characterName + '<br/>' : '')\n\t\t\t\t\t\t\t\t\t\t+ '\t\t'+mask.corporationName+'<br/>'\n\t\t\t\t\t\t\t\t\t\t+ '\t\t'+mask.allianceName\n\t\t\t\t\t\t\t\t\t\t+ '\t</div>'\n\t\t\t\t\t\t\t\t\t\t+ '</label>');\n\n\t\t\t\t\t\t\t\t\t$(\"#dialog-joinMask #results\").append(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (response && response.error) {\n\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(response.error);\n\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(\"Unknown error\");\n\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).always(function() {\n\t\t\t\t\t\t\t$(\"#dialog-joinMask #loading\").hide();\n\t\t\t\t\t\t\t$(\"#dialog-joinMask input[type='submit']\").removeAttr(\"disabled\");\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function() {\n\t\t\t\t\t$(\"#dialog-joinMask #results\").html(\"\");\n\t\t\t\t\t$(\"#dialog-joinMask input[name='name']\").val(\"\");\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(\"#dialog-options #masks\").on(\"click\", \"input[name='find']+label\", function() {\n\t\t\t\t$(\"#dialog-joinMask input[name='find']\").val($(this).prev().val());\n\t\t\t\t$(\"#dialog-joinMask\").dialog(\"open\");\n\t\t\t});\n\n\t\t\t// Mask leave\n\t\t\t$(\"#dialog-options #masks\").on(\"click\", \".closeIcon\", function() {\n\t\t\t\tvar mask = $(this).closest(\"input.selector+label\").prev();\n\n\t\t\t\t$(\"#dialog-confirm #msg\").text(\"Are you sure you want to remove this mask?\");\n\n\t\t\t\t$(\"#dialog-confirm\").dialog(\"option\", {\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\tRemove: function() {\n\t\t\t\t\t\t\tvar send = {mode: \"leave\", mask: mask.val()};\n\n\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\turl: \"masks.php\",\n\t\t\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\t\t\tdata: send,\n\t\t\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\t\t\tif (response && response.result) {\n\t\t\t\t\t\t\t\t\tmask.next().remove();\n\t\t\t\t\t\t\t\t\tmask.remove();\n\n\t\t\t\t\t\t\t\t\t$(\"#dialog-confirm\").dialog(\"close\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$(\"#dialog-confirm\").dialog(\"close\");\n\n\t\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(\"Unable to delete\");\n\t\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tCancel: function() {\n\t\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}).dialog(\"open\");\n\t\t\t});\n\n\t\t\t// Mask delete\n\t\t\t$(\"#maskControls #delete\").click(function() {\n\t\t\t\tvar mask = $(\"#masks input.selector:checked\");\n\n\t\t\t\t$(\"#dialog-confirm #msg\").text(\"Are you sure you want to delete this mask?\");\n\t\t\t\t$(\"#dialog-confirm\").dialog(\"option\", {\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\tDelete: function() {\n\t\t\t\t\t\t\tvar send = {mode: \"delete\", mask: mask.val()};\n\n\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\turl: \"masks.php\",\n\t\t\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\t\t\tdata: send,\n\t\t\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\t\t\tif (response && response.result) {\n\t\t\t\t\t\t\t\t\tmask.next().remove();\n\t\t\t\t\t\t\t\t\tmask.remove();\n\n\t\t\t\t\t\t\t\t\t$(\"#dialog-confirm\").dialog(\"close\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$(\"#dialog-confirm\").dialog(\"close\");\n\n\t\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(\"Unable to delete\");\n\t\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tCancel: function() {\n\t\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}).dialog(\"open\");\n\t\t\t});\n\n\t\t\t// User Create mask\n\t\t\t$(\"#dialog-createMask\").dialog({\n\t\t\t\tautoOpen: false,\n\t\t\t\tdialogClass: \"ui-dialog-shadow dialog-noeffect dialog-modal\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tCreate: function() {\n\t\t\t\t\t\t$(\"#dialog-createMask form\").submit();\n\t\t\t\t\t},\n\t\t\t\t\tCancel: function() {\n\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcreate: function() {\n\t\t\t\t\t$(\"#dialog-createMask #accessList\").on(\"click\", \"#create_add+label\", function() {\n\t\t\t\t\t\t$(\"#dialog-EVEsearch\").dialog(\"open\");\n\t\t\t\t\t});\n\n\t\t\t\t\t$(\"#dialog-createMask form\").submit(function(e) {\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\turl: \"masks.php\",\n\t\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\t\tdata: $(this).serialize(),\n\t\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\t\tif (response && response.result) {\n\t\t\t\t\t\t\t\t// Get masks\n\t\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\t\turl: \"masks.php\",\n\t\t\t\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\t\t\t\tif (response && response.masks) {\n\t\t\t\t\t\t\t\t\t\t$(\"#dialog-options #masks #default\").html(\"\");\n\t\t\t\t\t\t\t\t\t\t$(\"#dialog-options #masks #personal\").html(\"\");\n\t\t\t\t\t\t\t\t\t\t$(\"#dialog-options #masks #corporate\").html(\"\");\n\n\t\t\t\t\t\t\t\t\t\tfor (var x in response.masks) {\n\t\t\t\t\t\t\t\t\t\t\tvar mask = response.masks[x];\n\t\t\t\t\t\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t\t\t\t\t\t+ '<input type=\"radio\" name=\"mask\" id=\"mask'+x+'\" value=\"'+mask.mask+'\" class=\"selector\" data-owner=\"'+mask.owner+'\" data-admin=\"'+mask.admin+'\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t+ '<label for=\"mask'+x+'\"><img src=\"'+mask.img+'\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t+  (mask.optional ? '<i class=\"closeIcon\" onclick=\"return false;\" data-icon=\"red-giant\"><i data-icon=\"times\"></i></i>' : '')\n\t\t\t\t\t\t\t\t\t\t\t\t+ '<span class=\"selector_label\">'+mask.label+'</span></label>');\n\n\t\t\t\t\t\t\t\t\t\t\t$(\"#dialog-options #masks #\"+mask.type).append(node);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t\t\t\t\t+ '<input type=\"checkbox\" name=\"find\" id=\"findp\" value=\"personal\" class=\"selector\" disabled=\"disabled\" />'\n\t\t\t\t\t\t\t\t\t\t\t+ '<label for=\"findp\"><i data-icon=\"search\" style=\"font-size: 3em; margin-left: 16px; margin-top: 16px; display: block;\"></i></label>');\n\t\t\t\t\t\t\t\t\t\t$(\"#dialog-options #masks #personal\").append(node);\n\n\t\t\t\t\t\t\t\t\t\tif (init.admin == \"1\") {\n\t\t\t\t\t\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t\t\t\t\t\t+ '<input type=\"checkbox\" name=\"find\" id=\"findc\" value=\"corporate\" class=\"selector\" disabled=\"disabled\" />'\n\t\t\t\t\t\t\t\t\t\t\t\t+ '<label for=\"findc\"><i data-icon=\"search\" style=\"font-size: 3em; margin-left: 16px; margin-top: 16px; display: block;\"></i></label>');\n\t\t\t\t\t\t\t\t\t\t\t$(\"#dialog-options #masks #corporate\").append(node);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t$(\"#dialog-options input[name='mask']\").filter(\"[value='\"+response.masks[response.active].mask+\"']\").attr(\"checked\", true).trigger(\"change\");\n\n\t\t\t\t\t\t\t\t\t\t// toggle mask admin icon\n\t\t\t\t\t\t\t\t\t\tresponse.masks[response.active].admin ? $(\"#admin\").removeClass(\"disabled\") : $(\"#admin\").addClass(\"disabled\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t$(\"#dialog-createMask\").dialog(\"close\");\n\t\t\t\t\t\t\t} else if (response && response.error) {\n\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(response.error);\n\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(\"Unknown error\");\n\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t$(\"#dialog-createMask select\").selectmenu({width: 100});\n\t\t\t\t},\n\t\t\t\topen: function() {\n\t\t\t\t\t$(\"#dialog-createMask input[name='name']\").val(\"\");\n\t\t\t\t\t$(\"#dialog-createMask #accessList :not(.static)\").remove();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(\"#maskControls #create\").click(function() {\n\t\t\t\t$(\"#dialog-createMask\").dialog(\"open\");\n\t\t\t});\n\n\t\t\t$(\"#dialog-createMask #accessList\").on(\"click\", \".maskRemove\", function() {\n\t\t\t\t$(this).closest(\"input.selector+label\").prev().remove();\n\t\t\t\t$(this).closest(\"label\").remove();\n\t\t\t});\n\n\t\t\t$(\"#dialog-editMask\").dialog({\n\t\t\t\tautoOpen: false,\n\t\t\t\tdialogClass: \"ui-dialog-shadow dialog-noeffect dialog-modal\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tSave: function() {\n\t\t\t\t\t\t$(\"#dialog-editMask form\").submit();\n\t\t\t\t\t},\n\t\t\t\t\tCancel: function() {\n\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcreate: function() {\n\t\t\t\t\t$(\"#dialog-editMask #accessList\").on(\"click\", \".maskRemove\", function() {\n\t\t\t\t\t\t$(this).closest(\"input.selector+label\").prev().attr(\"name\", \"deletes[]\").hide();\n\t\t\t\t\t\t$(this).closest(\"label\").hide();\n\t\t\t\t\t});\n\n\t\t\t\t\t$(\"#dialog-editMask #accessList\").on(\"click\", \"#edit_add+label\", function() {\n\t\t\t\t\t\t$(\"#dialog-EVEsearch\").dialog(\"open\");\n\t\t\t\t\t});\n\n\t\t\t\t\t$(\"#dialog-editMask form\").submit(function(e) {\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\turl: \"masks.php\",\n\t\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\t\tdata: $(this).serialize(),\n\t\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\t\tif (response && response.result) {\n\t\t\t\t\t\t\t\t$(\"#dialog-editMask\").dialog(\"close\");\n\t\t\t\t\t\t\t} else if (response && response.error) {\n\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(response.error);\n\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(\"Unknown error\");\n\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\topen: function() {\n\t\t\t\t\tvar mask = $(\"#dialog-options input[name='mask']:checked\").val();\n\t\t\t\t\t$(\"#dialog-editMask input[name='mask']\").val(mask);\n\t\t\t\t\t$(\"#dialog-editMask #accessList label.static\").hide();\n\t\t\t\t\t$(\"#dialog-editMask #loading\").show();\n\t\t\t\t\t$(\"#dialog-editMask #name\").text($(\"#dialog-options input[name='mask']:checked+label .selector_label\").text());\n\n\t\t\t\t\t$.ajax({\n\t\t\t\t\t\turl: \"masks.php\",\n\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\tdata: {mode: \"edit\", mask: mask},\n\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\tif (response && response.results) {\n\t\t\t\t\t\t\tfor (var x in response.results) {\n\t\t\t\t\t\t\t\tvar result = response.results[x];\n\t\t\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t\t\t+ '<input type=\"checkbox\" checked=\"checked\" onclick=\"return false\" name=\"\" id=\"edit_'+(result.type == 2 ? result.corporationID : result.characterID)+'_'+result.type+'\" value=\"'+(result.type == 2 ? result.corporationID : result.characterID)+'_'+result.type+'\" class=\"selector\" />'\n\t\t\t\t\t\t\t\t\t+ '<label for=\"edit_'+(result.type == 2 ? result.corporationID : result.characterID)+'_'+result.type+'\" style=\"width: 100%; margin-left: -5px;\">'\n\t\t\t\t\t\t\t\t\t+ '\t<img src=\"https://image.eveonline.com/'+(result.type == 2 ? 'Corporation/'+result.corporationID+'_64.png' : 'Character/'+result.characterID+'_64.jpg')+'\" />'\n\t\t\t\t\t\t\t\t\t+ '\t<span class=\"selector_label\">'+(result.type == 2 ? 'Corporation' : 'Character')+'</span>'\n\t\t\t\t\t\t\t\t\t+ '\t<div class=\"info\">'\n\t\t\t\t\t\t\t\t\t+ '\t\t'+(result.type != 2 ? result.characterName + '<br/>' : '')\n\t\t\t\t\t\t\t\t\t+ '\t\t'+result.corporationName+'<br/>'\n\t\t\t\t\t\t\t\t\t+ '\t\t'+result.allianceName\n\t\t\t\t\t\t\t\t\t+ '\t\t<input type=\"button\" class=\"maskRemove\" value=\"Remove\" style=\"position: absolute; bottom: 3px; right: 3px;\" />'\n\t\t\t\t\t\t\t\t\t+ '\t</div>'\n\t\t\t\t\t\t\t\t\t+ '</label>');\n\n\t\t\t\t\t\t\t\t$(\"#dialog-editMask #accessList .static:first\").before(node);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$(\"#dialog-editMask #accessList label.static\").show();\n\t\t\t\t\t\t}\n\t\t\t\t\t}).always(function() {\n\t\t\t\t\t\t$(\"#dialog-editMask #loading\").hide();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tclose: function() {\n\t\t\t\t\t$(\"#dialog-editMask #accessList :not(.static)\").remove();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(\"#maskControls #edit\").click(function() {\n\t\t\t\t$(\"#dialog-editMask\").dialog(\"open\");\n\t\t\t});\n\n\t\t\t// EVE search dialog\n\t\t\t$(\"#dialog-EVEsearch\").dialog({\n\t\t\t\tautoOpen: false,\n\t\t\t\tdialogClass: \"ui-dialog-shadow dialog-noeffect dialog-modal\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tAdd: function() {\n\t\t\t\t\t\tif ($(\"#accessList input[value='\"+$(\"#EVESearchResults input\").val()+\"']\").length) {\n\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(\"Already has access\");\n\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$(\"#EVESearchResults .info\").append('<input type=\"button\" class=\"maskRemove\" value=\"Remove\" style=\"position: absolute; bottom: 3px; right: 3px;\" />');\n\t\t\t\t\t\tvar node = $(\"#EVESearchResults\").html();\n\n\t\t\t\t\t\tif ($(\"#dialog-createMask\").dialog(\"isOpen\"))\n\t\t\t\t\t\t\t$(\"#dialog-createMask #accessList .static:first\").before(node);\n\t\t\t\t\t\telse if ($(\"#dialog-editMask\").dialog(\"isOpen\"))\n\t\t\t\t\t\t\t$(\"#dialog-editMask #accessList .static:first\").before(node);\n\n\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t},\n\t\t\t\t\tClose: function() {\n\t\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcreate: function() {\n\t\t\t\t\t$(\"#EVEsearch\").submit(function(e) {\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t$(\"#EVEsearch #searchSpinner\").show();\n\t\t\t\t\t\t$(\"#EVEsearch input[type='submit']\").attr(\"disabled\", \"disabled\");\n\t\t\t\t\t\t$(\"#dialog-EVEsearch\").parent().find(\".ui-dialog-buttonpane button:contains('Add')\").attr(\"disabled\", true).addClass(\"ui-state-disabled\");\n\n\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\turl: \"masks.php\",\n\t\t\t\t\t\t\ttype: \"POST\",\n\t\t\t\t\t\t\tdata: $(this).serialize(),\n\t\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t\t}).done(function(response) {\n\t\t\t\t\t\t\tif (response && response.results) {\n\t\t\t\t\t\t\t\tvar result = response.results[0];\n\t\t\t\t\t\t\t\tvar node = $(''\n\t\t\t\t\t\t\t\t\t+ '<input type=\"checkbox\" checked=\"checked\" onclick=\"return false\" name=\"adds[]\" id=\"find_'+(result.type == 2 ? result.corporationID : result.characterID)+'_'+result.type+'\" value=\"'+(result.type == 2 ? result.corporationID : result.characterID)+'_'+result.type+'\" class=\"selector\" />'\n\t\t\t\t\t\t\t\t\t+ '<label for=\"find_'+(result.type == 2 ? result.corporationID : result.characterID)+'_'+result.type+'\" style=\"width: 100%; margin-left: -5px;\">'\n\t\t\t\t\t\t\t\t\t+ '\t<img src=\"https://image.eveonline.com/'+(result.type == 2 ? 'Corporation/'+result.corporationID+'_64.png' : 'Character/'+result.characterID+'_64.jpg')+'\" />'\n\t\t\t\t\t\t\t\t\t+ '\t<span class=\"selector_label\">'+(result.type == 2 ? 'Corporation' : 'Character')+'</span>'\n\t\t\t\t\t\t\t\t\t+ '\t<div class=\"info\">'\n\t\t\t\t\t\t\t\t\t+ '\t\t'+(result.type != 2 ? result.characterName + '<br/>' : '')\n\t\t\t\t\t\t\t\t\t+ '\t\t'+result.corporationName+'<br/>'\n\t\t\t\t\t\t\t\t\t+ '\t\t'+result.allianceName\n\t\t\t\t\t\t\t\t\t+ '\t</div>'\n\t\t\t\t\t\t\t\t\t+ '</label>');\n\n\t\t\t\t\t\t\t\t$(\"#EVESearchResults\").html(node);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$(\"#dialog-error #msg\").text(\"No Results\");\n\t\t\t\t\t\t\t\t$(\"#dialog-error\").dialog(\"open\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).always(function() {\n\t\t\t\t\t\t\t$(\"#EVEsearch #searchSpinner\").hide();\n\t\t\t\t\t\t\t$(\"#EVEsearch input[type='submit']\").removeAttr(\"disabled\");\n\t\t\t\t\t\t\t$(\"#dialog-EVEsearch\").parent().find(\".ui-dialog-buttonpane button:contains('Add')\").removeAttr(\"disabled\").removeClass(\"ui-state-disabled\");\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tclose: function() {\n\t\t\t\t\t$(\"#EVEsearch input[name='name']\").val(\"\");\n\t\t\t\t\t$(\"#EVESearchResults\").html(\"\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\t$(\"#dialog-options\").dialog(\"open\");\n});\n","$(\"#add-signature\").click(function(e) {\n\te.preventDefault();\n\n\t$(\"#dialog-sigAdd\").dialog({\n\t\tautoOpen: false,\n\t\tresizable: false,\n\t\tminHeight: 150,\n\t\tdialogClass: \"dialog-noeffect\",\n\t\tbuttons: {\n\t\t\tAdd: function() {\n\t\t\t\t$(\"#sigAddForm\").submit();\n\t\t\t},\n\t\t\tCancel: function() {\n\t\t\t\t$(this).dialog(\"close\");\n\t\t\t}\n\t\t},\n\t\topen: function() {\n\t\t\t$(\"#sigAddForm #sigID\").val('');\n\t\t\t$(\"#sigAddForm #sigType\").val(\"Sites\").selectmenu(\"refresh\").trigger(\"selectmenuchange\");\n\t\t\t$(\"#sigAddForm #sigLife\").val(72).selectmenu(\"refresh\");\n\t\t\t$(\"#sigAddForm #sigName\").val('');\n\t\t\t$(\"#sigAddForm #whType\").val('');\n\t\t\t$(\"#sigAddForm #connection\").val('');\n\t\t\t$(\"#sigAddForm #autoAdd\")[0].checked = false;\n\t\t\t$(\"#sigAddForm #autoAdd\").button(\"refresh\");\n\t\t\t$(\"#sigAddForm #whLife\").val(\"Stable\").selectmenu(\"refresh\");\n\t\t\t$(\"#sigAddForm #whMass\").val(\"Stable\").selectmenu(\"refresh\");\n\n\t\t\tif (tripwire.client.EVE && tripwire.client.EVE.systemName) {\n\t\t\t\t$(\"#autoAdd\").button(\"enable\");\n\t\t\t} else {\n\t\t\t\t$(\"#autoAdd\").button(\"disable\");\n\t\t\t}\n\t\t},\n\t\tclose: function() {\n\t\t\t$(\"th.critical\").removeClass(\"critical\");\n\t\t\tValidationTooltips.close();\n\t\t},\n\t\tcreate: function() {\n\t\t\t$(\"#autoAdd\").button().click(function() {\n\t\t\t\t$(\"#sigAddForm #connection\").val(tripwire.client.EVE.systemName);\n\t\t\t});\n\n\t\t\t$(\"#sigAddForm #sigType, #sigAddForm #sigLife\").selectmenu({width: 100});\n\t\t\t$(\"#sigAddForm #whLife, #sigAddForm #whMass\").selectmenu({width: 80});\n\t\t\t$(\"#sigAddForm .sigSystemsAutocomplete\").inlinecomplete({source: tripwire.aSigSystems, maxSize: 10, delay: 0});\n\t\t\t$(\"#sigAddForm .typesAutocomplete\").inlinecomplete({source: whList, maxSize: 10, delay: 0});\n\n\t\t\t$(\"#sigAddForm #whType, #sigAddForm #sigID\").blur(function(e) {\n\t\t\t\tif (this.value == \"\") {\n\t\t\t\t\tthis.value = \"???\";\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$(\"#sigAddForm #whType, #sigAddForm #sigID\").focus(function(e) {\n\t\t\t\t$(this).select();\n\t\t\t});\n\t\t}\n\t});\n\n\t$(\"#dialog-sigAdd\").dialog(\"open\");\n});\n\n$(\"#sigAddForm\").submit(function(e) {\n\te.preventDefault();\n\n\t// Trim ending whitespace\n\t$(\"#sigAddForm #connection\").val($(\"#sigAddForm #connection\").val().trim());\n\n\t$(\"th.critical\").removeClass(\"critical\");\n\tValidationTooltips.close();\n\n\t// Check for !empty and length == 3\n\tif ($(\"#sigAddForm #sigID\").val() == '' || $(\"#sigAddForm #sigID\").val().length !== 3) {\n\t\t$(\"#sigAddForm #sigID\").focus().parent().prev(\"th\").addClass(\"critical\");\n\t\tValidationTooltips.open({target: $(\"#sigAddForm #sigID\")}).setContent(\"Must be 3 Letters in length!\");\n\t\treturn;\n\t}\n\n\t// Check for letters only\n\tif ($(\"#sigAddForm #sigID\").val() !== \"???\") {\n\t\tvar i = $(\"#sigAddForm #sigID\").val().length;\n\t\twhile (i--) {\n\t\t\tif ($(\"#sigAddForm #sigID\").val()[i].toLowerCase() === $(\"#sigAddForm #sigID\").val()[i].toUpperCase()) {\n\t\t\t\t$(\"#sigAddForm #sigID\").focus().parent().prev(\"th\").addClass(\"critical\");\n\t\t\t\tValidationTooltips.open({target: $(\"#sigAddForm #sigID\")}).setContent(\"Must be only letters!\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Check for existing ID\n\t\tif ($.map(tripwire.client.signatures, function(sig) {return sig.mask == \"273.0\" && ((options.chain.active != null && !options.chain.tabs[options.chain.active].evescout) || options.chain.active == null) ? null : (viewingSystemID == sig.systemID ? sig.signatureID : sig.sig2ID)}).indexOf($(\"#sigAddForm #sigID\").val().toUpperCase()) !== -1) {\n\t\t\t$(\"#sigAddForm #sigID\").focus().parent().prev(\"th\").addClass(\"critical\");\n\t\t\tValidationTooltips.open({target: $(\"#sigAddForm #sigID\")}).setContent(\"Signature ID already exists!\");\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Check for !empty WH type\n\tif ($(\"#sigAddForm #sigType\").val() == \"Wormhole\" && $(\"#sigAddForm #whType\").val() == '') {\n\t\t$(\"#sigAddForm #whType\").focus().parent().prev(\"th\").addClass(\"critical\");\n\t\tValidationTooltips.open({target: $(\"#sigAddForm #whType\")}).setContent(\"Must specify a wormhole type!\");\n\t\treturn;\n\t}\n\n\t// Check for valid WH type\n\tif ($(\"#sigAddForm #sigType\").val() == \"Wormhole\" && whList.indexOf($(\"#sigAddForm #whType\").val()) == -1) {\n\t\t$(\"#sigAddForm #whType\").focus().parent().prev(\"th\").addClass(\"critical\");\n\t\tValidationTooltips.open({target: $(\"#sigAddForm #whType\")}).setContent(\"Not a valid wormhole type!\");\n\t\treturn;\n\t}\n\n\t// Check for valid Leads To\n\tif ($(\"#sigAddForm #sigType\").val() == \"Wormhole\" && $(\"#sigAddForm #connection\").val() && tripwire.aSigSystems.indexOf($(\"#sigAddForm #connection\").val()) == -1) {\n\t\t$(\"#sigAddForm #connection\").focus().parent().prev(\"th\").addClass(\"critical\");\n\t\tValidationTooltips.open({target: $(\"#sigAddForm #connection\")}).setContent(\"Not a valid leads to system!\");\n\t\treturn;\n\t}\n\n\tvar form = $(this).serializeObject();\n\tform.systemID = viewingSystemID;\n\tform.lifeLength = tripwire.wormholes[form.whType] ? tripwire.wormholes[form.whType].life.split(\" \")[0] : 72;\n\tform.class = sigClass(viewingSystem, form.whType);\n\tif (Object.index(tripwire.systems, \"name\", form.connectionName)) {\n\t\tform.connectionID = Object.index(tripwire.systems, \"name\", form.connectionName);\n\t\tform.class2 = sigClass(form.connectionName, null);\n\t\tform.connectionName = null;\n\t}\n\n\tvar data = {\"request\": {\"signatures\": {\"add\": form}}};\n\n\t// Prevent duplicate submitting\n\t$(\"#sigAddForm input[type=submit]\").attr(\"disabled\", true);\n\t$(\"#dialog-sigAdd\").parent().find(\":button:contains('Add')\").button(\"disable\");\n\n\tvar success = function(data) {\n\t\tif (data.result == true) {\n\t\t\t$(\"#dialog-sigAdd\").dialog(\"close\");\n\n\t\t\t$(\"#undo\").removeClass(\"disabled\");\n\t\t\tvar undo = $.map(data.resultSet, function(id) { return data.signatures[id] });\n\t\t\tif (viewingSystemID in tripwire.signatures.undo) {\n\t\t\t\ttripwire.signatures.undo[viewingSystemID].push({action: \"add\", signatures: undo});\n\t\t\t} else {\n\t\t\t\ttripwire.signatures.undo[viewingSystemID] = [{action: \"add\", signatures: undo}];\n\t\t\t}\n\n\t\t\tsessionStorage.setItem(\"tripwire_undo\", JSON.stringify(tripwire.signatures.undo));\n\t\t}\n\t}\n\n\tvar always = function(data) {\n\t\t$(\"#sigAddForm input[type=submit]\").removeAttr(\"disabled\");\n\t\t$(\"#dialog-sigAdd\").parent().find(\":button:contains('Add')\").button(\"enable\");\n\t}\n\n\ttripwire.refresh('refresh', data, success, always);\n});\n","$(\"#add-signature2\").click(function(e) {\n\te.preventDefault();\n\n\tif (!$(\"#dialog-signature\").hasClass(\"ui-dialog-content\")) {\n\t\t$(\"#dialog-signature\").dialog({\n\t\t\tautoOpen: true,\n\t\t\tresizable: false,\n\t\t\tdialogClass: \"dialog-noeffect ui-dialog-shadow\",\n\t\t\tposition: {my: \"center\", at: \"center\", of: $(\"#signaturesWidget\")},\n\t\t\tbuttons: {\n\t\t\t\tAdd: function() {\n\t\t\t\t\t$(\"#form-signature\").submit();\n\t\t\t\t},\n\t\t\t\tCancel: function() {\n\t\t\t\t\t$(this).dialog(\"close\");\n\t\t\t\t}\n\t\t\t},\n\t\t\tcreate: function() {\n\t\t\t\tvar aSigWormholes = $.map(tripwire.wormholes, function(item, index) { return index;});\n\t\t\t\taSigWormholes.splice(26, 0, \"K162\");\n\t\t\t\taSigWormholes.push(\"GATE\");\n\n\t\t\t\t$(\"#dialog-signature [name='signatureType'], #dialog-signature [name='signatureLife']\").selectmenu({width: 100});\n\t\t\t\t$(\"#dialog-signature [name='wormholeLife'], #dialog-signature [name='wormholeMass']\").selectmenu({width: 80});\n\t\t\t\t$(\"#dialog-signature [data-autocomplete='sigSystems']\").inlinecomplete({source: tripwire.aSigSystems, maxSize: 10, delay: 0});\n\t\t\t\t$(\"#dialog-signature [data-autocomplete='sigType']\").inlinecomplete({source: aSigWormholes, maxSize: 10, delay: 0});\n\n\t\t\t\t$(\"#dialog-signature #durationPicker\").durationPicker();\n\n\t\t\t\t// Ensure first signature ID field only accepts letters\n\t\t\t\t$(\"#dialog-signature [name='signatureID_A_Alpha'], #dialog-signature [name='signatureID_B_Alpha']\").on(\"input\", function() {\n\t\t\t\t\twhile (!/^[a-zA-Z?]*$/g.test(this.value)) {\n\t\t\t\t\t\tthis.value = this.value.substring(0, this.value.length -1);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Ensure second signature ID field only accepts numbers\n\t\t\t\t$(\"#dialog-signature [name='signatureID_A_Numeric'], #dialog-signature [name='signatureID_B_Numeric']\").on(\"input\", function() {\n\t\t\t\t\twhile (!/^[0-9?]*$/g.test(this.value)) {\n\t\t\t\t\t\tthis.value = this.value.substring(0, this.value.length -1);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Select value on click\n\t\t\t\t$(\"#dialog-signature .signatureID, #dialog-signature .wormholeType\").on(\"click\", function() {\n\t\t\t\t\t$(this).select();\n\t\t\t\t});\n\n\t\t\t\t// Auto fill opposite side wormhole w/ K162\n\t\t\t\t$(\"#dialog-signature .wormholeType\").on(\"input, change\", function() {\n\t\t\t\t\tif ($(this).val().length > 0 && $.inArray($(this).val(), aSigWormholes) != -1 && $(this).val() != \"K162\") {\n\t\t\t\t\t\t$(\"#dialog-signature .wormholeType\").not(this).val(\"K162\");\n\n\t\t\t\t\t\t// Also auto calculate duration\n\t\t\t\t\t\t$(\"#dialog-signature #durationPicker\").val(tripwire.wormholes[$(this).val()].life.substring(0, 2) * 60 * 60).change();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Toggle between wormhole and regular signatures\n\t\t\t\t$(\"#dialog-signature\").on(\"selectmenuchange\", \"[name='signatureType']\", function() {\n\t\t\t\t\tif (this.value == \"wormhole\") {\n\t\t\t\t\t\t$(\"#dialog-signature #site\").slideUp(200, function() { $(this).hide(0); });\n\t\t\t\t\t\t$(\"#dialog-signature #wormhole\").slideDown(200, function() { $(this).show(200); });\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$(\"#dialog-signature #site\").slideDown(200, function() { $(this).show(200); });\n\t\t\t\t\t\t$(\"#dialog-signature #wormhole\").slideUp(200, function() { $(this).hide(0); });\n\t\t\t\t\t}\n\n\t\t\t\t\tValidationTooltips.close();\n\t\t\t\t});\n\n\t\t\t\t$(\"#form-signature\").submit(function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tvar form = $(this).serializeObject();\n\t\t\t\t\tvar valid = true;\n\t\t\t\t\tValidationTooltips.close();\n\n\t\t\t\t\t// Validate full signature ID fields (blank | 3 characters)\n\t\t\t\t\t$.each($(\"#dialog-signature .signatureID:visible\"), function() {\n\t\t\t\t\t\tif ($(this).val().length > 0 && $(this).val().length < 3) {\n\t\t\t\t\t\t\tValidationTooltips.open({target: $(this)}).setContent(\"Must be 3 characters in length!\");\n\t\t\t\t\t\t\t$(this).select();\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif (!valid) return false;\n\n\t\t\t\t\t// Validate life length (> 5 minutes)\n\t\t\t\t\tif (isNaN(parseInt($(\"#dialog-signature #durationPicker\").val())) || !(parseInt($(\"#dialog-signature #durationPicker\").val()) >= 300)) {\n\t\t\t\t\t\tValidationTooltips.open({target: $(\"#dialog-signature #durationPicker + .bdp-input\")}).setContent(\"Must be at least 5 minutes!\");\n\t\t\t\t\t\t$(\"#dialog-signature #durationPicker\").select();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Validate wormhole types (blank | wormhole)\n\t\t\t\t\t$.each($(\"#dialog-signature .wormholeType:visible\"), function() {\n\t\t\t\t\t\tif ($(this).val().length > 0 && $.inArray($(this).val(), aSigWormholes) == -1) {\n\t\t\t\t\t\t\tValidationTooltips.open({target: $(this)}).setContent(\"Must be a valid wormhole type!\");\n\t\t\t\t\t\t\t$(this).select();\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif (!valid) return false;\n\n\t\t\t\t\t// Validate first leads to (system)\n\t\t\t\t\tif ($(\"#dialog-signature .leadsTo:visible\")[0] && $.inArray($(\"#dialog-signature .leadsTo:visible:first\").val(), tripwire.aSigSystems) == -1) {\n\t\t\t\t\t\tValidationTooltips.open({target: $(\"#dialog-signature .leadsTo:visible:first\")}).setContent(\"Must be a valid leads to system!\");\n\t\t\t\t\t\t$(this).select();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Validate leads to system (blank | system)\n\t\t\t\t\t$.each($(\"#dialog-signature .leadsTo:visible\"), function() {\n\t\t\t\t\t\tif ($(this).val().length > 0 && $.inArray($(this).val(), tripwire.aSigSystems) == -1) {\n\t\t\t\t\t\t\tValidationTooltips.open({target: $(this)}).setContent(\"Must be a valid leads to system!\");\n\t\t\t\t\t\t\t$(this).select();\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif (!valid) return false;\n\n\t\t\t\t\tconsole.log(form);\n\n\t\t\t\t\t$.ajax({\n\t\t\t\t\t\turl: \"signatures2.php\",\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\tdata: form,\n\t\t\t\t\t\tdataType: \"JSON\"\n\t\t\t\t\t}).always(function(result) {\n\t\t\t\t\t\tconsole.log(result);\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t},\n\t\t\topen: function() {\n\t\t\t\t$(\"#dialog-signature input\").val(\"\");\n\t\t\t\t$(\"#dialog-signature [name='signatureType']\").val(\"combat\").selectmenu(\"refresh\");\n\n\t\t\t\t$(\"#dialog-signature #site\").show();\n\t\t\t\t$(\"#dialog-signature #wormhole\").hide();\n\n\t\t\t\t// Side labels\n\t\t\t\t$(\"#dialog-signature .sideLabel:first\").html(viewingSystem + \" Side\");\n\t\t\t\t$(\"#dialog-signature .sideLabel:last\").html(\"Other Side\");\n\n\t\t\t\t// Default signature life\n\t\t\t\t$(\"#dialog-signature #durationPicker\").val(options.signatures.pasteLife * 60 * 60).change();\n\t\t\t},\n\t\t\tclose: function() {\n\t\t\t\tValidationTooltips.close();\n\t\t\t}\n\t\t});\n\t} else if (!$(\"#dialog-signature\").dialog(\"isOpen\")) {\n\t\t$(\"#dialog-signature\").dialog(\"open\");\n\t}\n});\n"]}